
<!-- saved from url=(0057)http://testng.org/doc/documentation-main.html#annotations -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
        <title>TestNG</title>

        <link rel="stylesheet" href="./TestNG_files/testng.css" type="text/css">
        <link type="text/css" rel="stylesheet" href="./TestNG_files/beust.css">
        <script type="text/javascript" src="./TestNG_files/banner.js"></script>

      <script type="text/javascript" src="./TestNG_files/shCore.js"></script>
      <script type="text/javascript" src="./TestNG_files/shBrushJava.js"></script>
      <script type="text/javascript" src="./TestNG_files/shBrushXml.js"></script>
      <script type="text/javascript" src="./TestNG_files/shBrushBash.js"></script>
      <script type="text/javascript" src="./TestNG_files/shBrushPlain.js"></script>
      <link type="text/css" rel="stylesheet" href="./TestNG_files/shCore.css">
      <link type="text/css" rel="stylesheet" href="./TestNG_files/shThemeCedric.css">
      <script type="text/javascript">
        SyntaxHighlighter.config.clipboardSwf = 'scripts/clipboard.swf';
        SyntaxHighlighter.defaults['gutter'] = false;
        SyntaxHighlighter.all();
      </script>
      <script type="text/javascript" src="./TestNG_files/toc.js"></script>

        <style type="text/css">
            /* Set the command-line table option column width. */
            #command-line colgroup.option {
                 width: 7em;
            }
        </style>
    </head>
<body onload="generateToc();">

<script type="text/javascript">
    displayMenu("documentation-main.html")
</script><div id="topmenu">
    <table width="100%">
            <tbody><tr>
                <td><a href="http://testng.org/doc/index.html">Welcome</a></td>
                <td><a href="http://testng.org/doc/download.html">Download</a></td>
                <td class="current"><a href="http://testng.org/doc/documentation-main.html">Documentation</a></td>
                <td><a href="http://testng.org/doc/migrating.html">Migrating from JUnit</a></td>
                <td><a href="http://testng.org/javadocs/index.html">JavaDoc</a></td>
                <td><a href="http://testng.org/doc/selenium.html">Selenium</a></td>
            </tr>
            <tr>
                <td><a href="http://testng.org/doc/eclipse.html">Eclipse</a></td>
                <td><a href="http://testng.org/doc/idea.html">IDEA</a></td>
                <td><a href="http://testng.org/doc/maven.html">Maven</a></td>
                <td><a href="http://testng.org/doc/ant.html">Ant</a></td>
                <td><a href="http://testng.org/doc/misc.html">Miscellaneous</a></td>
                <td><a href="http://testng.org/doc/book.html">Book</a></td>
            </tr>
        </tbody></table>
    </div>


<h2 align="center">TestNG</h2>

<!-- --------------------------

<table class="float-right">
  <tr>
    <td>
<script type="text/javascript"><!--
google_ad_client = "pub-1467757024002850";
google_ad_width = 120;
google_ad_height = 600;
google_ad_format = "120x600_as";
google_ad_channel ="5560744946";
//-->
<!-- 

</script>

<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>      
    </td>
  </tr>
</table>

------------------------------- -->

<!-------------------------------------
  TOC
  ------------------------------------>

<h3>Table of Contents</h3>

<div id="table-of-contents">&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#introduction">1 - Introduction</a><br>&nbsp;&nbsp;<a class="table-of-contents" href="./TestNG_files/TestNG.htm">2 - Annotations</a><br>&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#testng-xml">3 - testng.xml</a><br>&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#running-testng">4 - Running TestNG</a><br>&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#methods">5 - Test methods, Test classes and Test groups</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#test-groups">5.1 - Test methods</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#test-groups">5.2 - Test groups</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#groups-of-groups">5.3 - Groups of groups</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#exclusions">5.4 - Exclusion groups</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#partial-groups">5.5 - Partial groups</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#parameters">5.6 - Parameters</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#parameters-testng-xml">5.6.1 - Parameters from <tt>testng.xml</tt></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#parameters-dataproviders">5.6.2 - Parameters with DataProviders</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#parameters-reports">5.6.3 - Parameters in reports</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#dependent-methods">5.7 - Dependencies</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#dependencies-with-annotations">5.7.1 - Dependencies with annotations</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#dependencies-in-xml">5.7.2 - Dependencies in XML</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#factories">5.8 - Factories</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#class-level">5.9 - Class level annotations</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#parallel-running">5.10 - Parallelism and time-outs</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#parallel-tests">5.10.1 - Parallel suites</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#parallel-tests">5.10.2 - Parallel tests, classes and methods</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#rerunning">5.11 - Rerunning failed tests</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#junit">5.12 - JUnit tests</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#running-testng-programmatically">5.13 - Running TestNG programmatically</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#beanshell">5.14 - BeanShell and advanced group selection</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#annotationtransformers">5.15 - Annotation Transformers</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#methodinterceptors">5.16 - Method Interceptors</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#testng-listeners">5.17 - TestNG Listeners</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#listeners-testng-xml">5.17.1 - Specifying listeners with <tt>testng.xml</tt> or in Java</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#listeners-service-loader">5.17.2 - Specifying listeners with <tt>ServiceLoader</tt></a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#dependency-injection">5.18 - Dependency injection</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#native-dependency-injection">5.18.1 - Native dependency injection</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#guice-dependency-injection">5.18.2 - Guice dependency injection</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#invokedmethodlistener">5.19 - Listening to method invocations</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#ihookable">5.20 - Overriding test methods</a><br>&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#test-results">6 - Test results</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#success-failure">6.1 - Success, failure and assert</a><br>&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#logging">6.2 - Logging and results</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#logging-listeners">6.2.1 - Logging Listeners</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#logging-reporters">6.2.2 - Logging Reporters</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#logging-junitreports">6.2.3 - JUnitReports</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#logging-reporter-api">6.2.4 - Reporter API</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#logging-xml-reports">6.2.5 - XML Reports</a><br>&nbsp;&nbsp;<a class="table-of-contents" href="http://testng.org/doc/documentation-main.html#yaml">7 - YAML</a><br></div>


<!-------------------------------------
  INTRODUCTION
  ------------------------------------>
<h3><a class="section" name="introduction">1 - Introduction</a></h3>TestNG is a testing framework designed to simplify a broad range of testing needs, from unit testing (testing a class in isolation of the others) to integration testing (testing entire systems made of several classes, several packages and even several external frameworks, such as application servers).

<p>

Writing a test is typically a three-step process:

</p><ul>
<li>Write the business logic of your test and insert <a href="./TestNG_files/TestNG.htm">TestNG annotations</a> in your code.
</li>
<li>Add the information about your test (e.g. the class name, the groups you wish to run, etc...) in a <tt><a href="http://testng.org/doc/documentation-main.html#testng-xml">testng.xml</a></tt> file or in build.xml.
</li>
<li><a href="http://testng.org/doc/ant.html">Run TestNG</a>.
</li>
</ul>
You can find a quick example on the <a href="http://testng.org/doc/index.html">Welcome page</a>.
<p>
The concepts used in this documentation are as follows:

</p><ul>
<li>
A suite is represented by one XML file.  It can contain one or more tests and is defined by the <tt>&lt;suite&gt;</tt> tag.
</li>
<li>
A test is represented by <tt>&lt;test&gt;</tt> and can contain one or more TestNG classes.
</li>
<li>
A TestNG class is a Java class that contains at least one TestNG annotation.  It is represented by the <tt>&lt;class&gt;</tt> tag and can contain one or more test methods.
</li>
<li>
A test method is a Java method annotated by <tt>@Test</tt> in your source.
</li></ul>A TestNG test can be configured by <tt>@BeforeXXX and @AfterXXX </tt>annotations which allows to perform some Java logic before and after a certain point, these points being either of the items listed above.<p>
The rest of this manual will explain the following:
</p><p>
</p><ul>
<li>A list of all the annotations with a brief explanation.  This will give you an idea of the various functionalities offered by TestNG but you will probably want to consult the section dedicated to each of these annotations to learn the details.
</li>
<li>A description of the testng.xml file, its syntax and what you can specify in it.
</li>
<li>A detailed list of the various features and how to use them with a combination of annotations and testng.xml.
</li>
</ul>


<!-------------------------------------
  ANNOTATIONS
  ------------------------------------>

  <h3><a class="section" name="annotations">2 - Annotations</a></h3>Here is a quick overview of the annotations available in TestNG along with their attributes.

<p>

<table>

<tbody><tr>
<td colspan="2"><b><tt>@BeforeSuite<br>@AfterSuite<br>@BeforeTest<br>@AfterTest<br>@BeforeGroups<br>@AfterGroups<br>@BeforeClass<br>@AfterClass<br>@BeforeMethod<br>@AfterMethod</tt></b></td><td><b>Configuration information for a TestNG class:</b>

<br>

<br><b>@BeforeSuite: </b>The annotated method will be run before all tests in this suite have run.

<br><b>@AfterSuite: </b> The annotated method will be run after all tests in this suite have run. 

<br><b>@BeforeTest</b>: The annotated method will be run before any test method belonging to the classes inside the &lt;test&gt; tag is run.

<br><b>@AfterTest</b>: The annotated method will be run after all the test methods belonging to the classes inside the &lt;test&gt; tag have run.

<br><b>@BeforeGroups</b>:   The list of groups that this configuration method will run before. This method is guaranteed to run shortly before the first test method that belongs to any of these groups is invoked.

<br><b>@AfterGroups</b>:   The list of groups that this configuration method will run after.  This method is guaranteed to run shortly after the last test method that belongs to any of these groups is invoked.

<br><b>@BeforeClass</b>: The annotated method will be run before the first test method in the current class is invoked.

<br><b>@AfterClass</b>: The annotated method will be run after all the test methods in the current class have been run. 

<br><b>@BeforeMethod</b>: The annotated method will be run before each test method.

<br><b>@AfterMethod</b>: The annotated method will be run after each test method.

</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>alwaysRun</tt>
</td>
<td>
   For before methods (beforeSuite, beforeTest, beforeTestClass and
   beforeTestMethod, but not beforeGroups):
   If set to true, this configuration method will be run
   regardless of what groups it belongs to. 
   <br>
   For after methods (afterSuite, afterClass, ...): 
   If set to true, this configuration method will be run
   even if one or more methods invoked previously failed or
   was skipped.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>dependsOnGroups</tt>
</td>
<td>
          The list of groups this method depends on.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>dependsOnMethods</tt>
</td>
<td>
          The list of methods this method depends on.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>enabled</tt>
</td>
<td>
          Whether methods on this class/method are enabled.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>groups</tt>
</td>
<td>
          The list of groups this class/method belongs to.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>inheritGroups</tt>
</td>
<td>
          If true, this method will belong to groups specified in the @Test annotation at the class level.
</td>
</tr>

<tr class="separator">
<td colspan="3">&nbsp;</td>
</tr>

<tr>
<td colspan="2"><tt><b>@DataProvider</b></tt></td><td><b>Marks a method as supplying data for a test method. The annotated method must return an Object[][] where each Object[] can be assigned the parameter list of the test method. The @Test method that wants to receive data from this DataProvider needs to use a dataProvider name equals to the name of this annotation.</b></td></tr><tr>
<td>
</td>
<td>
<tt>name</tt>
</td>
<td>
The name of this data provider. If it's not supplied, the name of this data provider will automatically be set to the name of the method.
</td>
</tr>
<tr>
<td>
</td>
<td>
<tt>parallel</tt>
</td>
<td>
If set to true, tests generated using this data provider are run in parallel. Default value is false.
</td>
</tr>
<tr>
<td colspan="3">&nbsp;</td>
</tr>

<tr>
<td colspan="2"><b><tt>@Factory</tt></b></td><td><b> Marks a method as a factory that returns objects that will be used by TestNG as Test classes.  The method must return Object[].</b></td></tr><tr>
<td colspan="3">&nbsp;</td>
</tr>

<tr>
<td colspan="2"><b><tt>@Listeners</tt></b></td><td><b>Defines listeners on a test class.</b></td></tr>
<tr>
  <td></td>
  <td>
    <tt>value</tt>
  </td>
  <td>
    An array of classes that extend <tt>org.testng.ITestNGListener</tt>.
  </td>
</tr>

<tr>
<td colspan="3">&nbsp;</td>
</tr>

<tr><td colspan="2"><b><tt>@Parameters</tt></b></td><td><b>Describes how to pass parameters to a @Test method.</b></td></tr><tr>
<td>
</td>
<td>
<tt>value</tt>
</td>
<td>
The list of variables used to fill the parameters of this method.
</td>
</tr>

<tr>
<td colspan="3">&nbsp;</td>
</tr>

<tr>
<td colspan="2"><b>@Test</b></td><td><b>Marks a class or a method as part of the test.</b></td></tr><tr>
<td>
</td>
<td>
<tt>alwaysRun</tt>
</td>
<td>
          If set to true, this test method will always be run even if it depends on a method that failed.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>dataProvider</tt>
</td>
<td>
The name of the data provider for this test method.
</td>
</tr>


<tr>
<td>
</td>
<td>
<tt>dataProviderClass</tt>
</td>
<td>
The class where to look for the data provider.  If not specified, the data provider will be looked on the class of the current test method or one of its base classes. If this attribute is specified, the data provider method needs to be static on the specified class.  
</td>
</tr>






<tr>
<td>
</td>
<td>
<tt>dependsOnGroups</tt>
</td>
<td>
          The list of groups this method depends on.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>dependsOnMethods</tt>
</td>
<td>
          The list of methods this method depends on.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>description</tt>
</td>
<td>
          The description for this method.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>enabled</tt>
</td>
<td>
          Whether methods on this class/method are enabled.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>expectedExceptions</tt>
</td>
<td>
           The list of exceptions that a test method is expected to throw.  If no exception or a different than one on this list is thrown, this test will be marked a failure.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>groups</tt>
</td>
<td>
          The list of groups this class/method belongs to.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>invocationCount</tt>
</td>
<td>
          The number of times this method should be invoked.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>invocationTimeOut</tt>
</td>
<td>
          The maximum number of milliseconds this test should take for the cumulated time of all the invocationcounts.  This attribute will be ignored if invocationCount is not specified.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>priority</tt>
</td>
<td>
          The priority for this test method. Lower priorities will be scheduled first.
</td>
</tr>

<tr>
<td>
</td>
<td>

<tt>successPercentage</tt>
</td>
<td>
          The percentage of success expected from this method
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>singleThreaded</tt>
</td>
<td>
             If set to true, all the methods on this test class are guaranteed to run in the same thread, even if the tests are currently being run with parallel="methods". This attribute can only be used at the class level and it will be ignored if used at the method level. Note: this attribute used to be called <tt>sequential</tt> (now deprecated).

</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>timeOut</tt>
</td>
<td>
          The maximum number of milliseconds this test should take.
</td>
</tr>

<tr>
<td>
</td>
<td>
<tt>threadPoolSize</tt>
</td>
<td>
             The size of the thread pool for this method.  
The method will be invoked from multiple threads as specified by 
invocationCount. <br>Note:  this attribute is ignored if invocationCount is not specified

</td>
</tr>

</tbody></table>





<!-------------------------------------
  TESTNG.XML
  ------------------------------------>
  </p><h3><a class="section" name="testng-xml">3 - testng.xml</a></h3><p>You can invoke TestNG in several different ways:</p><ul>
	<li>With a <tt>testng.xml</tt> file</li><li><a href="http://testng.org/doc/ant.html">With ant</a></li><li>From the command line</li></ul><p>This section describes the format of <tt>testng.xml</tt> (you will find documentation 
on ant and the command line below).</p><p>The current DTD for <tt>testng.xml</tt> can be found on the main Web site:&nbsp;
<a href="http://testng.org/testng-1.0.dtd">http://testng.org/testng-1.0.dtd</a> 
(for your convenience, you might prefer to browse the
<a href="http://testng.org/dtd">HTML version</a>).</p>

Here is an example <tt>testng.xml</tt> file:

<p>
</p><h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_702835" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_702835_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_702835" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;!DOCTYPE suite SYSTEM "<a href="http://testng.org/testng-1.0.dtd">http://testng.org/testng-1.0.dtd</a>" &gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Suite1"</code> <code class="color1">verbose</code><code class="plain">=</code><code class="string">"1"</code> <code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Nopackage"</code> <code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"NoPackageTest"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Regression1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test.sample.ParameterSample"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test.sample.ParameterTest"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">suite</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

You can specify package names instead of class names:

<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_969826" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_969826_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_969826" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;!DOCTYPE suite SYSTEM "<a href="http://testng.org/testng-1.0.dtd">http://testng.org/testng-1.0.dtd</a>" &gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Suite1"</code> <code class="color1">verbose</code><code class="plain">=</code><code class="string">"1"</code> <code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Regression1"</code>&nbsp;&nbsp; <code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">packages</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2 highlighted"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">package</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test.sample"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">packages</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">suite</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>


<p>In this example, TestNG will look at all the classes in the package 
	<tt>test.sample</tt> and will retain only classes that have TestNG annotations.</p>

You can also specify groups and methods to be included and excluded:

<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_444458" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_444458_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_444458" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Regression1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">exclude</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"brokenTests"</code>&nbsp; <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"checkinTests"</code>&nbsp; <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test.IndividualMethodsTest"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">methods</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"testMethod"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">methods</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">class</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<p>You can also define new groups inside <tt>testng.xml</tt> and specify additional details in attributes, such as whether to run the tests in parallel, how many threads to use, whether you are running JUnit tests, etc...&nbsp;
</p><p>

By default, TestNG will run your tests in the order they are found in the XML
file. If you want the classes and methods listed in this file to be
run in an unpredictible order, set the <tt>preserve-order</tt>
attribute to <tt>false</tt>

</p><h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_974229" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_974229_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_974229" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Regression1"</code> <code class="color1">preserve-order</code><code class="plain">=</code><code class="string">"false"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test.Test1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">methods</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"m1"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"m2"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">methods</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">class</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test.Test2"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<p>

Please see the DTD for a complete list of the features, or read on.</p>

<!-------------------------------------
  RUNNING TESTNG
  ------------------------------------>

<h3><a class="section" name="running-testng">4 - Running TestNG</a></h3>TestNG can be invoked in different ways:

<ul>
<li>Command line
</li>
<li><a href="http://testng.org/doc/ant.html">ant</a>
</li>
<li><a href="http://testng.org/doc/eclipse.html">Eclipse</a>
</li>
<li><a href="http://testng.org/doc/idea.html">IntelliJ's IDEA</a>
</li>
</ul>

This section only explains how to invoke TestNG from the command line.  Please click on one of the links above if you are interested in one of the other ways.
<p>
Assuming that you have TestNG in your class path, the simplest way to invoke TestNG is as follows:

</p><div id="highlighter_301076" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_301076_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_301076" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">java org.testng.TestNG testng1.xml [testng2.xml testng3.xml ...]</code></td></tr></tbody></table></div></div></div>

You need to specify at least one XML file describing the TestNG suite you are trying to run.  Additionally, the following command-line switches are available:

<p></p>

<table id="command-line">
    <caption>Command Line Parameters</caption><colgroup class="option">
    </colgroup><colgroup class="argument">
    </colgroup><colgroup class="documentation">
    </colgroup><thead>

        <tr>
            <th>Option</th>
    	<th>Argument</th>
    	<th>Documentation</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>-configfailurepolicy</td>
	    <td><tt>skip</tt>|<tt>continue</tt></td>
	    <td>Whether TestNG should <tt>continue</tt> to execute the remaining tests in the suite or <tt>skip</tt> them if
            an @Before* method fails.  Default behavior is <tt>skip</tt>.</td>
        </tr>

        <tr>
            <td>-d</td>
	    <td>A directory</td>
	    <td>The directory where the reports will be generated (defaults to <tt>test-output</tt>).</td>
        </tr>

        <tr>
            <td>-dataproviderthreadcount</td>
	    <td>The default number of threads to use for data
            providers when running tests in parallel.</td>
	    <td>This sets the default maximum number of threads to use
            for data providers when running tests in parallel. It will only take effect if the parallel mode has been selected (for example, with the -parallel option). This can be overridden in the suite definition.</td>
        </tr>

	<tr>
            <td>-excludegroups</td>
	    <td>A comma-separated list of groups.</td><td>The list of groups you want to be excluded from this run.</td>
        </tr>
	  
        <tr>
            <td>-groups</td>
	    <td>A comma-separated list of groups.</td>
	    <td>The list of groups you want to run (e.g. <tt>"windows,linux,regression"</tt>).</td>
	</tr>

        <tr>
            <td>-listener</td>
	    <td>A comma-separated list of Java classes that can be found on your classpath.</td>
	    <td>Lets you specify your own test listeners.  The classes need to implement <a href="http://testng.org/javadocs/org/testng/ITestListener.html"> <tt>org.testng.ITestListener</tt></a></td>
        </tr>

	<tr>
            <td>-methods</td>
	    <td>A comma separated list of fully qualified class name and method. For example <tt>com.example.Foo.f1,com.example.Bar.f2</tt>.</td>
	    <td>Lets you specify individual methods to run.</td>
        </tr>

        <tr>
            <td>-methodselectors</td>
	    <td>A comma-separated list of Java classes and method
            priorities that define method selectors.</td>
	    <td>Lets you specify method selectors on the command
            line. For example: <tt>com.example.Selector1:3,com.example.Selector2:2</tt></td>
        </tr>

	<tr>
            <td>-parallel</td>
	    <td>methods|tests|classes</td>
	    <td>If specified, sets the default mechanism used to determine how to use parallel threads when running tests. If not set, default mechanism is not to use parallel threads at all. This can be overridden in the suite definition.</td>
        </tr>

        <tr>
            <td>-reporter</td>
	    <td>The extended configuration for a custom report listener.</td>
	    <td>Similar to the <tt>-listener</tt> option, except that it allows the configuration of JavaBeans-style properties on the reporter instance.
	      <br>
            Example: <tt>-reporter com.test.MyReporter:methodFilter=*insert*,enableFiltering=true</tt>
	      <br>
            You can have as many occurences of this option, one for each reporter that needs to be added.</td>
        </tr>

        <tr>
            <td>-sourcedir</td>
    	    <td>A semi-colon separated list of directories.</td>
            <td>The directories where your javadoc annotated test sources are. This option is only necessary if you are using javadoc type annotations. (e.g. <tt>"src/test"</tt> or <tt>"src/test/org/testng/eclipse-plugin;src/test/org/testng/testng"</tt>).</td>
        </tr>

       <tr>
           <td>-suitename</td>
	   <td>The default name to use for a test suite.</td>
	   <td>This specifies the suite name for a test suite defined on the command line. This option is ignored if the suite.xml file or the source code specifies a different suite name.  It is possible to create a suite name with spaces in it if you surround it with double-quotes "like this".</td>
        </tr>
        
        <tr>
            <td>-testclass</td>
	    <td>A comma-separated list of classes that can be found in your classpath.</td><td>A list of class files separated by commas (e.g. <tt>"org.foo.Test1,org.foo.test2"</tt>).</td>
	</tr>

         <tr>
            <td>-testjar</td>
	    <td>A jar file.</td>
	    <td>Specifies a jar file that contains test classes.  If a <tt>testng.xml</tt> file is found at the root of that jar file, it will be used, otherwise, all the test classes found in this jar file will be considered test classes.</td>
        </tr>

        <tr>
            <td>-testname</td>
	    <td>The default name to use for a test.</td>
	    <td>This specifies the name for a test defined on the command line. This option is ignored if the suite.xml file or the source code specifies a different test name. It is possible to create a test name with spaces in it if you surround it with double-quotes "like this".</td>
        </tr>

        <tr>
            <td>-testnames</td>
	    <td>A comma separated list of test names.</td>
	    <td>Only tests defined in a &lt;test&gt; tag matching one of these names will be run.</td>
        </tr>

        <tr>
            <td>-testrunfactory</td>
	    <td>A Java classes that can be found on your classpath.</td>
	    <td>Lets you specify your own test runners.  The class needs to implement <a href="http://testng.org/javadocs/org/testng/ITestRunnerFactory.html"> <tt>org.testng.ITestRunnerFactory</tt></a>.</td>
        </tr>

        <tr>
            <td>-threadcount</td>
	    <td>The default number of threads to use when running tests in parallel.</td>
	    <td>This sets the default maximum number of threads to use for running tests in parallel. It will only take effect if the parallel mode has been selected (for example, with the -parallel option). This can be overridden in the suite definition.</td>
        </tr>

	<tr>
            <td>-xmlpathinjar</td>
	    <td>The path of the XML file inside the jar file.</td>
	    <td>This attribute should contain the path to a valid XML file inside the test jar (e.g. <tt>"resources/testng.xml"</tt>). The default is <tt>"testng.xml"</tt>, which means a file called "<tt>testng.xml</tt>" at the root of the jar file. This option will be ignored unless <tt>-testjar</tt> is specified.</td>
        </tr>

      </tbody>
</table>

<p>

This documentation can be obtained by invoking TestNG without any arguments.

</p><p>

You can also put the command line switches in a text file, say <tt>c:\command.txt</tt>, and tell TestNG to use that file to retrieve its parameters:

</p><div id="highlighter_310119" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_310119_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_310119" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">C:&gt; more c:\command.txt</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">-d test-output testng.xml</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">C:&gt; java org.testng.TestNG @c:\command.txt</code></td></tr></tbody></table></div></div></div>

<p>

Additionally, TestNG can be passed properties on the command line of the Java Virtual Machine, for example

</p><div id="highlighter_674074" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_674074_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_674074" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">java -Dtestng.test.classpath="c:/build;c:/java/classes;" org.testng.TestNG testng.xml</code></td></tr></tbody></table></div></div></div>

Here are the properties that TestNG understands:

<table id="system=properties">
    <caption>System properties</caption>
    <colgroup class="option">
    </colgroup><colgroup class="type">
    </colgroup><colgroup class="documentation">
    </colgroup><thead>
      <tr><th>Property</th>
      <th>Type</th>
      <th>Documentation</th></tr>
    </thead>

    <tbody><tr>
    <td>testng.test.classpath</td>
    <td>A semi-colon separated series of directories that contain your test classes.</td>
    <td>If this property is set, TestNG will use it to look for your test classes instead of the class path.  This is convenient if you are using the <tt>package</tt> tag in your XML file and you have a lot of classes in your classpath, most of them not being test classes.
    </td></tr>
</tbody></table>

<br>

<b>Example:</b>

<div id="highlighter_2790" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_2790_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_2790" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">java org.testng.TestNG -groups windows,linux -testclass org.test.MyTest</code></td></tr></tbody></table></div></div></div>

The <a href="http://testng.org/doc/ant.html">ant task</a> and <a href="http://testng.org/doc/documentation-main.html#testng-xml">testng.xml</a> allow you to launch TestNG with more parameters (methods to include, specifying parameters, etc...), so you should consider using the command line only when you are trying to learn about TestNG and you want to get up and running quickly.

<p>

<em>Important</em>: The command line flags that specify what tests should be run will be ignored if you also specify a <tt>testng.xml</tt> file, with the exception of <tt>-includedgroups</tt> and <tt>-excludedgroups</tt>, which will override all the group inclusions/exclusions found in <tt>testng.xml</tt>.

<!-------------------------------------
  METHODS
  ------------------------------------>

</p><h3><a class="section" name="methods">5 - Test methods, Test classes and Test groups</a></h3>

<h4><a class="section" indent=".." name="test-groups">5.1 - Test methods</a></h4>

Test methods are annotated with <tt>@Test</tt>. Methods annotated with <tt>@Test</tt> that happen to return a value will be ignored, unless you set <tt>allow-return-values</tt> to <tt>true</tt> in your <tt>testng.xml</tt>:

<div id="highlighter_933891" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_933891_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_933891" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">allow-return-values</code><code class="plain">=</code><code class="string">"true"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">or</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">allow-return-values</code><code class="plain">=</code><code class="string">"true"</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>


<h4><a class="section" indent=".." name="test-groups">5.2 - Test groups</a></h4>

<p>

TestNG allows you to perform sophisticated groupings of test methods. Not 
only can you declare that methods belong to groups, but you can also specify 
groups that contain other groups. Then TestNG can be invoked and asked to 
include a certain set of groups (or regular expressions) while excluding another 
set.&nbsp; This gives you maximum flexibility in how you partition your tests 
and doesn't require you to recompile anything if you want to run two different 
sets of tests back to back.</p>

<p>
Groups are specified in your <tt>testng.xml</tt> file and can be found either under the <tt>&lt;test&gt;</tt> or <tt>&lt;suite&gt;</tt> tag. Groups specified in the <tt>&lt;suite&gt;</tt> tag apply to all the <tt>&lt;test&gt;</tt> tags underneath. Note that groups are accumulative in these tags: if you specify group "a" in <tt>&lt;suite&gt;</tt> and "b" in <tt>&lt;test&gt;</tt>, then both "a" and "b" will be included.

</p><p>

</p><p>For example, it is quite common to have at least two categories of tests</p><ul>
  <li>Check-in tests.&nbsp; These tests should be run before you submit new 
	code.&nbsp; They should typically be fast and just make sure no basic 
	functionality was broken.<br>
&nbsp;</li>
  <li>Functional tests.&nbsp; These tests should cover all the functionalities 
	of your software and be run at least once a day, although ideally you would 
	want to run them continuously.</li></ul>


	Typically, check-in tests are a subset of functional tests.&nbsp; TestNG 
allows you to specify this in a very intuitive way with test groups.&nbsp; For 
example, you could structure your test by saying that your entire test class 
belongs to the "functest" group, and additionally that a couple of methods 
belong to the group "checkintest":

<h3 class="sourcetitle">Test1.java</h3>
<div id="highlighter_967614" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_967614_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_967614" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Test1 {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(groups = { </code><code class="string">"functest"</code><code class="plain">, </code><code class="string">"checkintest"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testMethod1() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(groups = {</code><code class="string">"functest"</code><code class="plain">, </code><code class="string">"checkintest"</code><code class="plain">} )</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testMethod2() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(groups = { </code><code class="string">"functest"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testMethod3() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

Invoking TestNG with
	<br>

<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_427957" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_427957_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_427957" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Test1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"functest"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"example1.Test1"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<p>will run all the test methods in that classes, while invoking it with <tt>checkintest</tt> will only run 
<tt>testMethod1()</tt> and <tt>testMethod2()</tt>.</p>


Here is another example, using regular expressions this time.&nbsp; Assume 
that some of your test methods should not be run on Linux, your test would look 
like:

<h3 class="sourcetitle">Test1.java</h3>
<div id="highlighter_425623" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_425623_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_425623" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Test1 {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(groups = { </code><code class="string">"windows.checkintest"</code> <code class="plain">}) </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testWindowsOnly() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(groups = {</code><code class="string">"linux.checkintest"</code><code class="plain">} )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testLinuxOnly() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(groups = { </code><code class="string">"windows.functest"</code> <code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testWindowsToo() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>


You could use the following testng.xml to launch only the Windows methods:

<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_103055" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_103055_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_103055" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Test1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2 highlighted"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"windows.*"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"example1.Test1"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<blockquote>
<em>Note:  TestNG uses <a href="http://en.wikipedia.org/wiki/Regular_expression">regular expressions</a>, and not <a href="http://en.wikipedia.org/wiki/Wildmat">wildmats</a>.  Be aware of the difference (for example, "anything" is matched by ".*" -- dot star -- and not "*").</em>
</blockquote>

<h4><a name="method-groups">Method groups</a></h4>

You can also exclude or include individual methods:

<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_807063" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_807063_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_807063" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Test1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"example1.Test1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">methods</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">".*enabledTestMethod.*"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">exclude</code> <code class="color1">name</code><code class="plain">=</code><code class="string">".*brokenTestMethod.*"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">methods</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">class</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

This can come in handy to deactivate a single method without having to recompile 
anything, but I don't recommend using this technique too much since it makes 
your testing framework likely to break if you start refactoring your Java code 
(the regular expressions used in the tags might not match your methods any 
more).


<h4><a class="section" indent=".." name="groups-of-groups">5.3 - Groups of groups</a></h4>

Groups can also include other groups.&nbsp;These groups are called "MetaGroups".&nbsp; 
For example, you might want to define a group "all" that includes "checkintest" 
and "functest".&nbsp; "functest" itself will contain the groups "windows" and 
"linux" while "checkintest will only contain "windows".&nbsp; Here is how you 
would define this in your property file:


<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_132930" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_132930_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_132930" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Regression1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">define</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"functest"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"windows"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"linux"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">define</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">define</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"all"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"functest"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"checkintest"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">define</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"all"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test.sample.Test1"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<p></p><!-------------------------------------
  EXCLUSION
  ------------------------------------>

<h4><a class="section" indent=".." name="exclusions">5.4 - Exclusion groups</a>

</h4><p>TestNG allows you to include groups as well as exclude them.</p>


For example, it is quite usual to have tests that temporarily break because 
of a recent change, and you don't have time to fix the breakage yet.&nbsp; 4
However, you do want to have clean runs of your functional tests, so you need to 
deactivate these tests but keep in mind they will need to be reactivated.<p></p><p>A simple way to solve this problem is to create a group called "broken" and 
make these test methods belong to it.&nbsp; For example, in the above example, I 
know that testMethod2() is now broken so I want to disable it:


</p><h3 class="sourcetitle">Java</h3>
<div id="highlighter_83740" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_83740_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_83740" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(groups = {</code><code class="string">"checkintest"</code><code class="plain">, </code><code class="string">"broken"</code><code class="plain">} )</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testMethod2() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

All I need to do now is to exclude this group from the run:

<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_734448" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_734448_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_734448" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Simple example"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"checkintest"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">exclude</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"broken"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"example1.Test1"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<p>This way, I will get a clean test run while keeping track of what tests are 
broken and need to be fixed later.</p>

<blockquote>
	<p><i>Note:&nbsp; you can also disable tests on an individual basis by using the 
"enabled" property available on both @Test and @Before/After
	annotations.</i></p>
</blockquote><h4>


<!-------------------------------------
  PARTIAL GROUPS
  ------------------------------------>

<a class="section" indent=".." name="partial-groups">5.5 - Partial groups</a></h4>

You can define  groups at the class level and then add groups at the method level:

<h3 class="sourcetitle">All.java</h3>
<div id="highlighter_385109" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_385109_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_385109" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(groups = { </code><code class="string">"checkin-test"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">All {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(groups = { </code><code class="string">"func-test"</code> <code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">method1() { ... }</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">method2() { ... }</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

In this class, method2() is part of the group "checkin-test", which is defined 
at the class level, while method1() belongs to both "checkin-test" and 
"func-test".

<!-------------------------------------
  PARAMETERS
  ------------------------------------>

<h4><a class="section" indent=".." name="parameters">5.6 - Parameters</a></h4><p>


Test methods don't have to be parameterless.&nbsp; You can use an arbitrary 
number of parameters on each of your test method, and you instruct TestNG to 
pass you the correct parameters with the <tt>@Parameters</tt> annotation.</p><p>


There are two ways to set these parameters:&nbsp; with <tt>testng.xml</tt> or 
programmatically.</p><p>


<em><a class="section" indent="..." name="parameters-testng-xml">5.6.1 - Parameters from <tt>testng.xml</tt></a></em></p>


If you are using simple values for your parameters, you can specify them in your 
<tt>testng.xml</tt>:


<h3 class="sourcetitle">Java</h3>
<div id="highlighter_144414" class="syntaxhighlighter nogutter  "><div class="bar                                                                              "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_144414_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_144414" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Parameters</code><code class="plain">({ </code><code class="string">"first-name"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSingleString(String firstName) { </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Invoked testString "</code> <code class="plain">+ firstName);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">assert</code> <code class="string">"Cedric"</code><code class="plain">.equals(firstName);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

In this code, we specify that the parameter <tt>firstName</tt> of your Java method 
should receive the value of the XML parameter called <tt>first-name</tt><i>.</i>&nbsp; 
This XML parameter is defined in <tt>testng.xml</tt>:<p>

</p><h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_547804" class="syntaxhighlighter nogutter  "><div class="bar                    "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_547804_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_547804" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"My suite"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">parameter</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"first-name"</code>&nbsp; <code class="color1">value</code><code class="plain">=</code><code class="string">"Cedric"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Simple example"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;-- ... --&gt;</code></td></tr></tbody></table></div></div></div>

<h4><span style="font-weight: 400">The same technique can be used for <tt>@Before/After </tt>and <tt>@Factory</tt> annotations:</span></h4>

<div id="highlighter_37796" class="syntaxhighlighter nogutter  "><div class="bar   "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_37796_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_37796" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Parameters</code><code class="plain">({ </code><code class="string">"datasource"</code><code class="plain">, </code><code class="string">"jdbcDriver"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="color1">@BeforeMethod</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">beforeTest(String ds, String driver) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">m_dataSource = ...;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments">// look up the value of datasource</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">m_jdbcDriver = driver;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

This time, the two Java parameter <i>ds</i> 
and <i>driver</i> will receive the value given to the properties <tt>datasource</tt> 
and <tt>jdbc-driver </tt>respectively.&nbsp;

<p>

Parameters can be declared optional with the <a href="http://testng.org/javadocs/org/testng/annotations/Optional.html"><tt>Optional</tt></a> annotation:

</p><div id="highlighter_684171" class="syntaxhighlighter nogutter  "><div class="bar                                  "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_684171_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_684171" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Parameters</code><code class="plain">(</code><code class="string">"db"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testNonExistentParameter(</code><code class="color1">@Optional</code><code class="plain">(</code><code class="string">"mysql"</code><code class="plain">) String db) { ... }</code></td></tr></tbody></table></div></div></div>

If no parameter named "db" is found in your <tt>testng.xml</tt> file, your test method will receive the default value specified inside the <tt>@Optional</tt> annotation: "mysql".

<p>The <tt>@Parameters</tt> annotation can be placed at the following locations:</p><ul>
	<li>On any method that already has a <tt>@Test</tt>, <tt>@Before/After</tt> 
	or <tt>@Factory</tt> annotation.</li><li>On at most one constructor of your test class.&nbsp; In this case, 
	TestNG will invoke this particular constructor with the parameters 
	initialized to the values specified in <tt>testng.xml</tt> whenever it needs 
	to instantiate your test class.&nbsp; This feature can be used to initialize fields 
	inside your classes to values that will then be used by your
	test methods.</li></ul>
	<blockquote>
	<p><i>Notes:

</i>
	</p><ul>
		<li><i>The XML parameters are mapped to the Java parameters in the same order as 
they are found in the annotation, and TestNG will issue an error if the numbers 
don't match. </i>
		</li><li><i>Parameters are scoped. In <tt>testng.xml</tt>, you can declare them either under a 
		<tt>&lt;suite&gt;</tt> tag or under <tt>&lt;test&gt;</tt>. If two parameters have the same name, it's the one 
defined in <tt>&lt;test&gt;</tt> that has precedence. This is convenient if you need to specify 
a parameter applicable to all your tests and override its value only for certain 
tests. </i>
		</li></ul>
	<p></p>
</blockquote>


<em><a class="section" indent="..." name="parameters-dataproviders">5.6.2 - Parameters with DataProviders</a></em>


<p>Specifying parameters in <tt>testng.xml</tt> might not be sufficient if you need to pass complex parameters, or parameters that need to be created  from Java (complex objects, objects read from a property file or a database, etc...). In this case, you can use a Data Provider to supply the values you need to test.&nbsp; A Data Provider is a method on your class that returns an array of array of objects.&nbsp; This method is annotated with <tt>@DataProvider</tt>:

</p><h3 class="sourcetitle">Java</h3>
<div id="highlighter_438585" class="syntaxhighlighter nogutter  "><div class="bar                                                                                                                   "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_438585_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_438585" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">//This method will provide data to any test method that declares that its Data Provider</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">//is named "test1"</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@DataProvider</code><code class="plain">(name = </code><code class="string">"test1"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="plain">Object[][] createData1() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="keyword">return</code> <code class="keyword">new</code> <code class="plain">Object[][] {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">{ </code><code class="string">"Cedric"</code><code class="plain">, </code><code class="keyword">new</code> <code class="plain">Integer(</code><code class="value">36</code><code class="plain">) },</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">{ </code><code class="string">"Anne"</code><code class="plain">, </code><code class="keyword">new</code> <code class="plain">Integer(</code><code class="value">37</code><code class="plain">)}, </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">//This test method declares that its data should be supplied by the Data Provider</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">//named "test1"</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(dataProvider = </code><code class="string">"test1"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">verifyData1(String n1, Integer n2) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">System.out.println(n1 + </code><code class="string">" "</code> <code class="plain">+ n2);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">} </code></td></tr></tbody></table></div></div></div>
will print

<div id="highlighter_198886" class="syntaxhighlighter nogutter  "><div class="bar  "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_198886_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_198886" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">Cedric 36</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">Anne 37</code></td></tr></tbody></table></div></div></div>

A <tt>@Test</tt> method specifies its Data Provider with the <tt>dataProvider</tt> attribute.&nbsp; 
This name must correspond to a method on the same class annotated with <tt>@DataProvider(name="...")</tt> 
with a matching name.

<p>
By default, the data provider will be looked for in the current test class or one of its base classes.  If you want to put your data provider in a different class, it needs to be a static method and you specify the class where it can be found in the <tt>dataProviderClass</tt> attribute:

</p><h3 class="sourcetitle">StaticProvider.java</h3>
<div id="highlighter_754759" class="syntaxhighlighter nogutter  "><div class="bar           "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_754759_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_754759" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">StaticProvider {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@DataProvider</code><code class="plain">(name = </code><code class="string">"create"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Object[][] createData() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="keyword">new</code> <code class="plain">Object[][] {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">new</code> <code class="plain">Object[] { </code><code class="keyword">new</code> <code class="plain">Integer(</code><code class="value">42</code><code class="plain">) }</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MyTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(dataProvider = </code><code class="string">"create"</code><code class="plain">, dataProviderClass = StaticProvider.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">test(Integer n) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// ...</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

The Data Provider method can return one of the following two types:

<ul>
<li>An array of array of objects (<tt>Object[][]</tt>) where the first dimension's size is the number of times the test method will be invoked and the second dimension size contains an array of objects that must be compatible with the parameter types of the test method. This is the cast illustrated by the example above.</li><li>An <tt>Iterator&lt;Object[]&gt;</tt>.  The only difference with <tt>Object[][]</tt> is that an <tt>Iterator</tt> lets you create your test data lazily.  TestNG will invoke the iterator and then the test method with the parameters returned by this iterator one by one.  This is particularly useful if you have a lot of parameter sets to pass to the method and you don't want to create all of them upfront.
</li></ul>
Here is an example of this feature:

<div id="highlighter_281753" class="syntaxhighlighter nogutter  "><div class="bar     "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_281753_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_281753" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@DataProvider</code><code class="plain">(name = </code><code class="string">"test1"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="plain">Iterator&lt;Object[]&gt; createData() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="keyword">new</code> <code class="plain">MyIterator(DATA);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">} </code></td></tr></tbody></table></div></div></div>

If you declare your <tt>@DataProvider</tt> as taking a <tt>java.lang.reflect.Method</tt>
as first parameter, TestNG will pass the current test method for this
first parameter.  This is particularly useful when several test methods
use the same <tt>@DataProvider</tt> and you want it to return different
values depending on which test method it is supplying data for.
<p>
For example, the following code prints the name of the test method inside its <tt>@DataProvider</tt>:

</p><div id="highlighter_676150" class="syntaxhighlighter nogutter  "><div class="bar                    "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_676150_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_676150" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@DataProvider</code><code class="plain">(name = </code><code class="string">"dp"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="plain">Object[][] createData(Method m) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">System.out.println(m.getName());&nbsp; </code><code class="comments">// print test method name</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="keyword">new</code> <code class="plain">Object[][] { </code><code class="keyword">new</code> <code class="plain">Object[] { </code><code class="string">"Cedric"</code> <code class="plain">}};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(dataProvider = </code><code class="string">"dp"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">test1(String s) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(dataProvider = </code><code class="string">"dp"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">test2(String s) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

and will therefore display:

<div id="highlighter_984658" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_984658_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_984658" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">test1</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">test2</code></td></tr></tbody></table></div></div></div>

Data providers can run in parallel with the attribute <tt>parallel</tt>:

<div id="highlighter_453813" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_453813_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_453813" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@DataProvider</code><code class="plain">(parallel = </code><code class="keyword">true</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">// ...</code></td></tr></tbody></table></div></div></div>

Parallel data providers running from an XML file share the same pool of threads, which has a size of 10 by default.  You can modify this value in the <tt>&lt;suite&gt;</tt> tag of your XML file:


<div id="highlighter_618607" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_618607_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_618607" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Suite1"</code> <code class="color1">data-provider-thread-count</code><code class="plain">=</code><code class="string">"20"</code> <code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">... </code></td></tr></tbody></table></div></div></div>

If you want to run a few specific data providers in a different thread pool, you need to run them from a different XML file.

<p>

<em><a class="section" indent="..." name="parameters-reports">5.6.3 - Parameters in reports</a></em>

</p><p>

Parameters used to invoke your test methods are shown in the HTML reports generated by TestNG.  Here is an example:

</p><p align="center">
<img src="./TestNG_files/parameters.png">
</p>


<p></p>


<!-------------------------------------
  DEPENDENCIES
  ------------------------------------>


<h4><a class="section" indent=".." name="dependent-methods">5.7 - Dependencies</a></h4><p>Sometimes, you need
your test methods to be invoked in a certain order.&nbsp; Here are a
few examples:

</p><ul>
<li>To make sure a certain number of test methods have completed and succeeded 
before running more test methods.
</li><li>To initialize your tests while wanting this initialization methods to be 
test methods as well (methods tagged with <tt>@Before/After</tt> will not be part of the 
final report).
</li></ul>

TestNG allows you to specify dependencies either with annotations or
in XML.

<h5><a class="section" indent="..." name="dependencies-with-annotations">5.7.1 - Dependencies with annotations</a></h5>

<p>You can use the attributes <tt>dependsOnMethods</tt> or <tt>dependsOnGroups</tt>, found on the <tt>@Test</tt> annotation.</p>There are two kinds of dependencies:

<ul>
<li><b>Hard dependencies</b>.  All the methods you depend on must have run and succeeded for you to run.  If at least one failure occurred in your dependencies, you will not be invoked and marked as a SKIP in the report.
</li>
<li><b>Soft dependencies</b>.  You will always be run after the methods you depend on, even if some of them have failed.  This is useful when you just want to make sure that your test methods are run in a certain order but their success doesn't really depend on the success of others.  A soft dependency is obtained by adding <tt>"alwaysRun=true"</tt> in your <tt>@Test</tt> annotation.
</li></ul>

Here is an example of a hard dependency:

<div id="highlighter_448498" class="syntaxhighlighter nogutter  "><div class="bar                       "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_448498_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_448498" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">serverStartedOk() {}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(dependsOnMethods = { </code><code class="string">"serverStartedOk"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">method1() {}</code></td></tr></tbody></table></div></div></div>

<p>In this example, <tt>method1()</tt> is declared as depending on method 
serverStartedOk(), which guarantees that serverStartedOk() 
will always be invoked first.</p><p>You can also have methods that depend on entire groups:</p>

<div id="highlighter_206991" class="syntaxhighlighter nogutter  "><div class="bar                                    "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_206991_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_206991" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(groups = { </code><code class="string">"init"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">serverStartedOk() {}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(groups = { </code><code class="string">"init"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">initEnvironment() {}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(dependsOnGroups = { "init.* })</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">method1() {}</code></td></tr></tbody></table></div></div></div>

<p>In this example, method1() is declared as depending on any group matching the 
regular expression "init.*", which guarantees that the methods <tt>serverStartedOk()</tt> 
and <tt>initEnvironment()</tt> will always be invoked before <tt>method1()</tt>.&nbsp; </p>
<blockquote>
	<p><i>Note:&nbsp; as stated before, the order of invocation for methods that 
	belong in the same group is not guaranteed to be the same across test runs.</i></p></blockquote><p>If a method depended upon fails and you have a hard dependency on it (<tt>alwaysRun=false</tt>, which is the default), the methods that depend on it are <b>not</b> 
marked as <tt>FAIL</tt> but as <tt>SKIP</tt>.&nbsp; Skipped methods will be reported as such in 
the final report (in a color that is neither red nor green in HTML), 
which is important since skipped methods are not necessarily failures.</p><p>Both <tt>dependsOnGroups</tt> and <tt>dependsOnMethods</tt> accept regular 
expressions as parameters.&nbsp; For <tt>dependsOnMethods</tt>, if you are 
depending on a method which happens to have several overloaded versions, all the 
overloaded methods will be invoked.&nbsp; If you only want to invoke one of the 
overloaded methods, you should use <tt>dependsOnGroups</tt>.</p><p>For a more advanced example of dependent methods, please refer to 
<a href="http://beust.com/weblog/archives/000171.html">this article</a>, which 
uses inheritance to provide an elegant solution to the problem of multiple 
dependencies.</p>

By default, dependent methods are grouped by class. For example, if method <tt>b()</tt> depends on method <tt>a()</tt> and you have several instances of the class that contains these methods (because of a factory of a data provider), then the invocation order will be as follows:

<div id="highlighter_882710" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_882710_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_882710" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">a(1)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">a(2)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">b(2)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">b(2)</code></td></tr></tbody></table></div></div></div>

TestNG will not run <tt>b()</tt> until all the instances have invoked their <tt>a()</tt> method.

<p>

This behavior might not be desirable in certain scenarios, such as for example testing a sign in and sign out of a web browser for various countries. In such a case, you would like the following ordering:

</p><div id="highlighter_12881" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_12881_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_12881" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">signIn("us")</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">signOut("us")</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">signIn("uk")</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">signOut("uk")</code></td></tr></tbody></table></div></div></div>

For this ordering, you can use the XML attribute <tt>group-by-instances</tt>. This attribute is valid either on &lt;suite&gt; or &lt;test&gt;:

<div id="highlighter_155260" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_155260_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_155260" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Factory"</code> <code class="color1">order-by-instances</code><code class="plain">=</code><code class="string">"true"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">or</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Factory"</code> <code class="color1">order-by-instances</code><code class="plain">=</code><code class="string">"true"</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>


<h5><a class="section" indent="..." name="dependencies-in-xml">5.7.2 - Dependencies in XML</a></h5>

Alternatively, you can specify your group dependencies in the <tt>testng.xml</tt> file. You use the <tt>&lt;dependencies&gt;</tt> tag to achieve this:

<div id="highlighter_990730" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_990730_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_990730" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"My suite"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">dependencies</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">group</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"c"</code> <code class="color1">depends-on</code><code class="plain">=</code><code class="string">"a&nbsp; b"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">group</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"z"</code> <code class="color1">depends-on</code><code class="plain">=</code><code class="string">"c"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">dependencies</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

The <tt>&lt;depends-on&gt;</tt> attribute contains a space-separated list of groups.


<!-------------------------------------
  FACTORIES
  ------------------------------------>

<h4>
<a class="section" indent=".." name="factories">5.8 - Factories</a>
</h4>

Factories allow you to create tests dynamically. For example, imagine you 
want to create a test method that will access a page on a Web site several 
times, and you want to invoke it with different values:

<h3 class="sourcetitle">TestWebServer.java</h3>
<div id="highlighter_280455" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_280455_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_280455" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">TestWebServer {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(parameters = { </code><code class="string">"number-of-times"</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">accessPage(</code><code class="keyword">int</code> <code class="plain">numberOfTimes) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">while</code> <code class="plain">(numberOfTimes-- &gt; </code><code class="value">0</code><code class="plain">) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// access the web page</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_41883" class="syntaxhighlighter nogutter  "><div class="bar     "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_41883_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_41883" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;test name=</code><code class="string">"T1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;parameter name=</code><code class="string">"number-of-times"</code> <code class="plain">value=</code><code class="string">"10"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="plain">name= </code><code class="string">"TestWebServer"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/test&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;test name=</code><code class="string">"T2"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;parameter name=</code><code class="string">"number-of-times"</code> <code class="plain">value=</code><code class="string">"20"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="plain">name= </code><code class="string">"TestWebServer"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;/test&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;test name=</code><code class="string">"T3"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;parameter name=</code><code class="string">"number-of-times"</code> <code class="plain">value=</code><code class="string">"30"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="plain">name= </code><code class="string">"TestWebServer"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/test&gt;</code></td></tr></tbody></table></div></div></div>

This can become quickly impossible to manage, so instead, you should use a factory:

<h3 class="sourcetitle">WebTestFactory.java</h3>
<div id="highlighter_170874" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_170874_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_170874" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">WebTestFactory {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Factory</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">Object[] createInstances() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">Object[] result = </code><code class="keyword">new</code> <code class="plain">Object[</code><code class="value">10</code><code class="plain">];&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="keyword">for</code> <code class="plain">(</code><code class="keyword">int</code> <code class="plain">i = </code><code class="value">0</code><code class="plain">; i &lt; </code><code class="value">10</code><code class="plain">; i++) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">result[i] = </code><code class="keyword">new</code> <code class="plain">WebTest(i * </code><code class="value">10</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">result;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

and the new test class is now:

<h3 class="sourcetitle">WebTest.java</h3>
<div id="highlighter_793268" class="syntaxhighlighter nogutter  "><div class="bar           "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_793268_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_793268" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">WebTest {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">int</code> <code class="plain">m_numberOfTimes;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">WebTest(</code><code class="keyword">int</code> <code class="plain">numberOfTimes) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">m_numberOfTimes = numberOfTimes;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testServer() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="keyword">for</code> <code class="plain">(</code><code class="keyword">int</code> <code class="plain">i = </code><code class="value">0</code><code class="plain">; i &lt; m_numberOfTimes; i++) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// access the web page</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

<p>Your <tt>testng.xml</tt> only needs to reference the class that 
contains the factory method, since the test instances themselves will be created 
at runtime:</p>

<div id="highlighter_25315" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_25315_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_25315" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">class</code> <code class="plain">name=</code><code class="string">"WebTestFactory"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div></div></div>

<p>The factory method can receive parameters just like <tt>@Test</tt> and <tt>@Before/After</tt> and it must return <tt>Object[]</tt>.&nbsp; 
The objects returned can be of any class (not necessarily the same class as the 
factory class) and they don't even need to contain TestNG annotations (in which 
case they will be ignored by TestNG).</p>

<p>

Factories can also be used with data providers, and you can leverage this functionality by putting the <tt>@Factory</tt> annotation either on a regular method or on a constructor. Here is an example of a constructor factory:

</p><div id="highlighter_580840" class="syntaxhighlighter nogutter  "><div class="bar     "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_580840_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_580840" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Factory</code><code class="plain">(dataProvider = </code><code class="string">"dp"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="plain">FactoryDataProviderSampleTest(</code><code class="keyword">int</code> <code class="plain">n) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">super</code><code class="plain">(n);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="color1">@DataProvider</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">static</code> <code class="keyword">public</code> <code class="plain">Object[][] dp() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="keyword">new</code> <code class="plain">Object[][] {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">new</code> <code class="plain">Object[] { </code><code class="value">41</code> <code class="plain">},</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">new</code> <code class="plain">Object[] { </code><code class="value">42</code> <code class="plain">},</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">};</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

The example will make TestNG create two test classes, on with the constructor invoked with the value 41 and the other with 42.



<!-------------------------------------
  CLASS LEVEL ANNOTATIONS
  ------------------------------------>

<h4><a class="section" indent=".." name="class-level">5.9 - Class level annotations</a></h4>

The <tt>@Test</tt> annotation can be put on a class instead of a test method:

<h3 class="sourcetitle">Test1.java</h3>
<div id="highlighter_937043" class="syntaxhighlighter nogutter  "><div class="bar                                        "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_937043_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_937043" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Test1 {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">test1() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">test2() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
The effect of a class level <tt>@Test</tt> annotation is to make all the public methods of this class to become test methods even if they are not annotated.  You can still repeat the <tt>@Test</tt> annotation on a method if you want to add certain attributes.
<p>

For example:

</p><h3 class="sourcetitle">Test1.java</h3>
<div id="highlighter_148300" class="syntaxhighlighter nogutter  "><div class="bar                                 "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_148300_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_148300" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Test1 {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">test1() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(groups = </code><code class="string">"g1"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">test2() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
will make both <tt>test1()</tt> and <tt>test2()</tt> test methods but on top of that, <tt>test2()</tt> now belongs to the group "g1".
<p>



<!-------------------------------------
  PARALLEL RUNNING
  ------------------------------------>

</p><h4><a class="section" indent=".." name="parallel-running">5.10 - Parallelism and time-outs</a></h4>

You can  instruct TestNG to run your tests in separate threads in various ways.

<h5><a class="section" indent="..." name="parallel-tests">5.10.1 - Parallel suites</a></h5>

This is useful if you are running several suite files (e.g. "<tt>java org.testng.TestNG testng1.xml testng2.xml"</tt>) and you want each of these suites to be run in a separate thread. You can use the following command line flag to specify the size of a thread pool:

<div id="highlighter_174434" class="syntaxhighlighter nogutter  "><div class="bar   "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_174434_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_174434" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">java org.testng.TestNG -suitethreadpoolsize 3 testng1.xml testng2.xml testng3.xml</code></td></tr></tbody></table></div></div></div>

The corresponding ant task name is <tt>suitethreadpoolsize</tt>.

<h5><a class="section" indent="..." name="parallel-tests">5.10.2 - Parallel tests, classes and methods</a></h5>
The <i>parallel</i> attribute on the &lt;suite&gt; tag can take one of following values:

<div id="highlighter_788853" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_788853_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_788853" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"My suite"</code> <code class="color1">parallel</code><code class="plain">=</code><code class="string">"methods"</code> <code class="color1">thread-count</code><code class="plain">=</code><code class="string">"5"</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<div id="highlighter_3919" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_3919_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_3919" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"My suite"</code> <code class="color1">parallel</code><code class="plain">=</code><code class="string">"tests"</code> <code class="color1">thread-count</code><code class="plain">=</code><code class="string">"5"</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<div id="highlighter_553309" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_553309_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_553309" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"My suite"</code> <code class="color1">parallel</code><code class="plain">=</code><code class="string">"classes"</code> <code class="color1">thread-count</code><code class="plain">=</code><code class="string">"5"</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<div id="highlighter_375176" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_375176_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_375176" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"My suite"</code> <code class="color1">parallel</code><code class="plain">=</code><code class="string">"instances"</code> <code class="color1">thread-count</code><code class="plain">=</code><code class="string">"5"</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>

<ul>
<li>
<b><tt>parallel="methods"</tt></b>:  TestNG will run all your test methods in separate threads. Dependent methods will also run in separate threads but they will respect the order that you specified.
</li>

<br>

<li>
<b><tt>parallel="tests"</tt></b>:  TestNG will run all the methods in the same &lt;test&gt; tag in the same thread, but each &lt;test&gt; tag will be in a separate thread.  This allows you to group all your classes that are not thread safe in the same &lt;test&gt; and guarantee they will all run in the same thread while taking advantage of TestNG using as many threads as possible to run your tests.
</li>

<br>

<li>
<b><tt>parallel="classes"</tt></b>:  TestNG will run all the methods in the same class in the same thread, but each class will be run in a separate thread.
</li>

<br>

<li>
<b><tt>parallel="instances"</tt></b>:  TestNG will run all the methods in the same instance in the same thread, but two methods on two different instances will be running in different threads.
</li>

</ul>

<p>


Additionally, the attribute <i>
thread-count</i> allows you to specify how many threads should be allocated for 
this execution.</p><blockquote>
	<p><i>Note: the <tt>@Test</tt> attribute <tt>timeOut</tt> works in both 
	parallel and non-parallel mode.</i></p></blockquote>You can also specify that a <tt>@Test</tt> method should be invoked from different threads.  You can use the attribute <tt>threadPoolSize</tt> to achieve this result:

<div id="highlighter_788699" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_788699_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_788699" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code><code class="plain">(threadPoolSize = </code><code class="value">3</code><code class="plain">, invocationCount = </code><code class="value">10</code><code class="plain">,&nbsp; timeOut = </code><code class="value">10000</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testServer() {</code></td></tr></tbody></table></div></div></div>
In this example, the function <tt>testServer</tt> will be invoked ten times from three different threads.  Additionally, a time-out of ten seconds guarantees that none of the threads will block on this thread forever. 

<!-------------------------------------
  RERUNNING
  ------------------------------------>


<h4><a class="section" indent=".." name="rerunning">5.11 - Rerunning failed tests</a></h4>Every time tests fail in a suite, TestNG creates a file called <tt>testng-failed.xml</tt> in the output directory.
This XML file contains the necessary information to rerun only these methods 
that failed, allowing you to quickly reproduce the failures without having to 
run the entirety of your tests.&nbsp; Therefore, a typical session would look 
like this:

<div id="highlighter_783665" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_783665_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_783665" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">java -classpath testng.jar;%CLASSPATH% org.testng.TestNG -d test-outputs testng.xml</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">java -classpath testng.jar;%CLASSPATH% org.testng.TestNG -d test-outputs test-outputs\testng-failed.xml</code></td></tr></tbody></table></div></div></div>

<p>Note that <tt>testng-failed.xml</tt> will contain all the necessary dependent 
methods so that you are guaranteed to run the methods that failed without any 
SKIP failures.</p>

<h4><a class="section" indent=".." name="junit">5.12 - JUnit tests</a></h4>

TestNG can run JUnit 3 and JUnit 4 tests.&nbsp; All you need to do is
put the JUnit jar file on the classpath, specify your JUnit test classes in the <tt>testng.classNames</tt>
property and set the <tt>testng.junit</tt> property to true:

<p></p>
<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_956802" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_956802_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_956802" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Test1"</code> <code class="color1">junit</code><code class="plain">=</code><code class="string">"true"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">&lt;!-- ... --&gt;</code></td></tr></tbody></table></div></div></div>

<p>The behavior of TestNG in this case is similar to JUnit depending on the JUnit version found on the class path:<br>
</p>
<ul>
    <li>JUnit 3:
<ul>
  <li>All methods starting with test* in your classes will be run</li><li>If there is a method setUp() on your test class, it will be invoked before 
	every test method</li><li>If there is a method tearDown() on your test class, it will be invoked 
	before after every test method</li><li>If your test class contains a method suite(), all the tests returned by 
	this method will be invoked</li></ul>
    </li>
    <li>JUnit 4:
        <ul>
            <li>TestNG will use the <tt>org.junit.runner.JUnitCore</tt> runner to run your tests</li>
        </ul>
    </li>
</ul>
    <!-------------------------------------
  JUNIT
 ------------------------------------><h4>


<!-------------------------------------
  RUNNING TESTNG
 ------------------------------------></h4><h4>
<a class="section" indent=".." name="running-testng-programmatically">5.13 - Running TestNG programmatically</a>
</h4>

You can invoke TestNG from your own programs very easily:

<h3 class="sourcetitle">Java</h3>
<div id="highlighter_699955" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_699955_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_699955" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">TestListenerAdapter tla = </code><code class="keyword">new</code> <code class="plain">TestListenerAdapter();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">TestNG testng = </code><code class="keyword">new</code> <code class="plain">TestNG();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">testng.setTestClasses(</code><code class="keyword">new</code> <code class="plain">Class[] { Run2.</code><code class="keyword">class</code> <code class="plain">});</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">testng.addListener(tla);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">testng.run(); </code></td></tr></tbody></table></div></div></div>

This example creates a <tt><a href="http://testng.org/javadocs/org/testng/TestNG.html">TestNG</a></tt> object and runs the test class <tt>Run2</tt>.  It also adds a <tt>TestListener</tt>.  You can either use the adapter class <tt><a href="http://testng.org/javadocs/org/testng/TestListenerAdapter.html">org.testng.TestListenerAdapter</a></tt> or implement <tt><a href="http://testng.org/javadocs/org/testng/ITestListener.html">org.testng.ITestListener</a></tt> yourself.  This interface contains various callback methods that let you keep track of when a test starts, succeeds, fails, etc... 
<p>
Similary, you can invoke TestNG on a <tt>testng.xml</tt> file or you can create a virtual <tt>testng.xml</tt> file yourself.  In order to do this, you can use the classes found the package <tt><a href="http://testng.org/javadocs/org/testng/xml/package-frame.html">org.testng.xml</a></tt>:  <tt><a href="http://testng.org/javadocs/org/testng/xml/XmlClass.html">XmlClass</a></tt>, <tt><a href="http://testng.org/javadocs/org/testng/xml/XmlTest.html">XmlTest</a></tt>, etc...  Each of these classes correspond to their XML tag counterpart.
</p><p>
For example, suppose you want to create the following virtual file:

</p><div id="highlighter_486626" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_486626_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_486626" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;suite name=</code><code class="string">"TmpSuite"</code> <code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;test name=</code><code class="string">"TmpTest"</code> <code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;classes&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="plain">name=</code><code class="string">"test.failures.Child"</code>&nbsp; <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;classes&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/test&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;/suite&gt;</code></td></tr></tbody></table></div></div></div>

You would use the following code:

<div id="highlighter_359019" class="syntaxhighlighter nogutter  "><div class="bar  "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_359019_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_359019" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">XmlSuite suite = </code><code class="keyword">new</code> <code class="plain">XmlSuite();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">suite.setName(</code><code class="string">"TmpSuite"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">XmlTest test = </code><code class="keyword">new</code> <code class="plain">XmlTest(suite);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">test.setName(</code><code class="string">"TmpTest"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">List&lt;XmlClass&gt; classes = </code><code class="keyword">new</code> <code class="plain">ArrayList&lt;XmlClass&gt;();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">classes.add(</code><code class="keyword">new</code> <code class="plain">XmlClass(</code><code class="string">"test.failures.Child"</code><code class="plain">));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">test.setXmlClasses(classes) ;</code></td></tr></tbody></table></div></div></div>
And then you can pass this <tt>XmlSuite</tt> to TestNG:

<div id="highlighter_635093" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_635093_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_635093" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">List&lt;XmlSuite&gt; suites = </code><code class="keyword">new</code> <code class="plain">ArrayList&lt;XmlSuite&gt;();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">suites.add(suite);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">TestNG tng = </code><code class="keyword">new</code> <code class="plain">TestNG();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">tng.setXmlSuites(suites);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">tng.run(); </code></td></tr></tbody></table></div></div></div>

<p>Please see the <a href="http://testng.org/doc/javadocs/org/testng/package-summary.html" target="mainFrame">JavaDocs</a> for the entire API.</p><p>


<!-------------------------------------
  BEANSHELL
 ------------------------------------>
	
</p><h4>
<a class="section" indent=".." name="beanshell">5.14 - BeanShell and advanced group selection</a>
</h4>


	<p>If the <tt>&lt;include&gt;</tt> and <tt>&lt;exclude&gt;</tt> tags in <tt>testng.xml</tt> are not enough for your needs, you can use a <a href="http://beanshell.org/">BeanShell</a> expression to decide whether a certain test method should be included in a test run or not. You specify this expression just under the <tt>&lt;test&gt;</tt> tag:</p>

<h3 class="sourcetitle">testng.xml</h3>
<div id="highlighter_621495" class="syntaxhighlighter nogutter  "><div class="bar    "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_621495_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_621495" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"BeanShell test"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">method-selectors</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">method-selector</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">script</code> <code class="color1">language</code><code class="plain">=</code><code class="string">"beanshell"</code><code class="plain">&gt;</code><code class="color2">&lt;![CDATA[</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color2">groups.containsKey("test1")</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color2">]]&gt;</code><code class="plain">&lt;/</code><code class="keyword">script</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">method-selector</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">method-selectors</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="comments">&lt;!-- ... --&gt;</code></td></tr></tbody></table></div></div></div>

When a <tt>&lt;script&gt;</tt> tag is found in <tt>testng.xml</tt>, TestNG will ignore subsequent <tt>&lt;include&gt;</tt> and <tt>&lt;exclude&gt;</tt> of groups and methods in the current <tt>&lt;test&gt;</tt> tag:&nbsp; your BeanShell expression will be the only way to decide whether a test method is included or not.<p></p><p>Here are additional information on the BeanShell script:</p><ul>
<li>
It must return a boolean value.&nbsp; Except for this constraint, any valid BeanShell code is allowed (for example, you might want to return <tt>true </tt>during week days and false during weekends, which would allow you to run tests differently depending on the date).<br>&nbsp;
</li>
<li>
TestNG defines the following variables for your convenience:<br>&nbsp; <b><tt>java.lang.reflect.Method method</tt></b>:&nbsp; the current test method.<br>&nbsp; <b>org.testng.ITestNGMethod testngMethod</b>:&nbsp; the description of the current test method.<br>&nbsp; <b><tt>java.util.Map&lt;String, String&gt; groups</tt></b>:&nbsp; a map of the groups the current test method belongs to.<br>&nbsp;
</li>
<li>
You might want to surround your expression with a <tt>CDATA</tt> declaration (as shown above) to avoid tedious quoting of reserved XML characters).<br>&nbsp;
</li>
</ul>

<!-------------------------------------
  ANNOTATION TRANSFORMERS
 ------------------------------------>
	
<h4>
<a class="section" indent=".." name="annotationtransformers">5.15 - Annotation Transformers</a>
</h4>

TestNG allows you to modify the content of all the annotations at runtime.  This is especially useful if the annotations in the source code are right most of the time, but there are a few situations where you'd like to override their value.
<p>

In order to achieve this, you need to use an Annotation Transformer.

</p><p>

An Annotation Transformer is a class that implements the following interface:

</p><div id="highlighter_893785" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_893785_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_893785" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">IAnnotationTransformer {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="preprocessor">/**</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* This method will be invoked by TestNG to give you a chance</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* to modify a TestNG annotation read from your test classes.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* You can change the values you need by calling any of the</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* setters on the ITest interface.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* Note that only one of the three parameters testClass,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* testConstructor and testMethod will be non-null.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* @param annotation The annotation that was read from your</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* test class.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* @param testClass If the annotation was found on a class, this</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* parameter represents this class (null otherwise).</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* @param testConstructor If the annotation was found on a constructor,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* this parameter represents this constructor (null otherwise).</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* @param testMethod If the annotation was found on a method,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* this parameter represents this method (null otherwise).</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">*/</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">transform(ITest annotation, Class testClass,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Constructor testConstructor, Method testMethod);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

Like all the other TestNG listeners, you can specify this class either on the command line or with ant:

<p>

</p><div id="highlighter_833404" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_833404_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_833404" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">java org.testng.TestNG -listener MyTransformer testng.xml</code></td></tr></tbody></table></div></div></div>

or programmatically:

<p>

</p><div id="highlighter_742739" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_742739_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_742739" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">TestNG tng = </code><code class="keyword">new</code> <code class="plain">TestNG();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">tng.setAnnotationTransformer(</code><code class="keyword">new</code> <code class="plain">MyTransformer());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">// ...</code></td></tr></tbody></table></div></div></div>

When the method <tt>transform()</tt> is invoked, you can call any of the setters on the <tt>ITest test</tt> parameter to alter its value before TestNG proceeds further.
<p>
For example, here is how you would override the attribute <tt>invocationCount</tt> but only on the test method <tt>invoke()</tt> of one of your test classes:

</p><div id="highlighter_413730" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_413730_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_413730" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MyTransformer </code><code class="keyword">implements</code> <code class="plain">IAnnotationTransformer {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">transform(ITest annotation, Class testClass,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Constructor testConstructor, Method testMethod)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">(</code><code class="string">"invoke"</code><code class="plain">.equals(testMethod.getName())) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">annotation.setInvocationCount(</code><code class="value">5</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

<tt>IAnnotationTransformer</tt> only lets you modify a <tt>@Test</tt> annotation.  If you need to modify another TestNG annotation (a configuration annotation, <tt>@Factory</tt> or <tt>@DataProvider</tt>), use an <tt>IAnnotationTransformer2</tt>.

<!-------------------------------------
  METHOD INTERCEPTORS
 ------------------------------------>
	
<h4>
<a class="section" indent=".." name="methodinterceptors">5.16 - Method Interceptors</a>
</h4>
Once TestNG has calculated in what order the test methods will be invoked, these methods are split in two groups:

<ul>
  <li><em>Methods run sequentially</em>.  These are all the test methods that have dependencies or dependents.  These methods will be run in a specific order.
  </li><li><em>Methods run in no particular order</em>.  These are all the methods that don't belong in the first category.  The order in which these test methods are run is random and can vary from one run to the next (although by default, TestNG will try to group test methods by class).
</li></ul>

In order to give you more control on the methods that belong to the second category, TestNG defines the following interface:

<div id="highlighter_11175" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_11175_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_11175" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">IMethodInterceptor {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">List&lt;IMethodInstance&gt; intercept(List&lt;IMethodInstance&gt; methods, ITestContext context);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

The list of methods passed in parameters are all the methods that can be run in any order.  Your <tt>intercept</tt> method is expected to return a similar list of <tt>IMethodInstance</tt>, which can be either of the following:

<ul>
  <li>The same list you received in parameter but in a different order.
  </li><li>A smaller list of <tt>IMethodInstance</tt> objects.
  </li><li>A bigger list of <tt>IMethodInstance</tt> objects.
</li></ul>

Once you have defined your interceptor, you pass it to TestNG as a listener.  For example:

<p>

</p><h3 class="sourcetitle">Shell</h3>
<div id="highlighter_656771" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_656771_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_656771" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">java -classpath "testng-jdk15.jar:test/build" org.testng.TestNG -listener test.methodinterceptors.NullMethodInterceptor</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="plain">-testclass test.methodinterceptors.FooTest</code></td></tr></tbody></table></div></div></div>

For the equivalent <tt>ant</tt> syntax, see the <tt>listeners</tt> attribute in the <a href="http://testng.org/doc/ant.html">ant documentation</a>.
<p>
For example, here is a Method Interceptor that will reorder the methods so that test methods that belong to the group "fast" are always run first:

</p><div id="highlighter_430296" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_430296_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_430296" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="plain">List&lt;IMethodInstance&gt; intercept(List&lt;IMethodInstance&gt; methods, ITestContext context) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">List&lt;IMethodInstance&gt; result = </code><code class="keyword">new</code> <code class="plain">ArrayList&lt;IMethodInstance&gt;();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">for</code> <code class="plain">(IMethodInstance m : methods) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Test test = m.getMethod().getConstructorOrMethod().getAnnotation(Test.</code><code class="keyword">class</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Set&lt;String&gt; groups = </code><code class="keyword">new</code> <code class="plain">HashSet&lt;String&gt;();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">for</code> <code class="plain">(String group : test.groups()) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">groups.add(group);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">(groups.contains(</code><code class="string">"fast"</code><code class="plain">)) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">result.add(</code><code class="value">0</code><code class="plain">, m);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">result.add(m);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">result;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>


<!-------------------------------------
  TESTNG LISTENERS
 ------------------------------------>
	
<h4>
<a class="section" indent=".." name="testng-listeners">5.17 - TestNG Listeners</a>
</h4>

There are several interfaces that allow you to modify TestNG's behavior.  These interfaces are broadly called "TestNG Listeners".  Here are a few listeners:

<ul>
  <li><tt>IAnnotationTransformer</tt> (<a href="http://testng.org/doc/documentation-main.html#annotationtransformers">doc</a>, <a href="http://testng.org/javadocs/org/testng/IAnnotationTransformer.html">javadoc</a>)
  </li><li><tt>IAnnotationTransformer2</tt> (<a href="http://testng.org/doc/documentation-main.html#annotationtransformers">doc</a>, <a href="http://testng.org/javadocs/org/testng/IAnnotationTransformer2.html">javadoc</a>)
  </li><li><tt>IHookable</tt> (<a href="http://testng.org/doc/documentation-main.html#ihookable">doc</a>, <a href="http://testng.org/javadocs/org/testng/IHookable.html">javadoc</a>)
  </li><li><tt>IInvokedMethodListener</tt> (doc, <a href="http://testng.org/javadocs/org/testng/IInvokedMethodListener.html">javadoc</a>)
  </li><li><tt>IMethodInterceptor</tt> (<a href="http://testng.org/doc/documentation-main.html#methodinterceptors">doc</a>, <a href="http://testng.org/javadocs/org/testng/IMethodInterceptor.html">javadoc</a>)
  </li><li><tt>IReporter</tt> (<a href="http://testng.org/doc/documentation-main.html#logging-reporters">doc</a>, <a href="http://testng.org/javadocs/org/testng/IReporter.html">javadoc</a>)
  </li><li><tt>ISuiteListener</tt> (doc, <a href="http://testng.org/javadocs/org/testng/ISuiteListener.html">javadoc</a>)
  </li><li><tt>ITestListener</tt> (<a href="http://testng.org/doc/documentation-main.html#logging-listeners">doc</a>, <a href="http://testng.org/javadocs/org/testng/ITestListener.html">javadoc</a>)
</li></ul>

When you implement one of these interfaces, you can let TestNG know about it with either of the following ways:

<ul>
  <li><a href="http://testng.org/doc/documentation-main.html#running-testng">Using -listener on the command line.</a>
  </li><li><a href="http://testng.org/doc/ant.html">Using &lt;listeners&gt; with ant.</a>
  </li><li>Using &lt;listeners&gt; in your <tt>testng.xml</tt> file.
  </li><li>Using the <tt>@Listeners</tt> annotation on any of your test classes.
  </li><li>Using <tt>ServiceLoader</tt>.
</li></ul>

<h3><a class="section" indent="..." name="listeners-testng-xml">5.17.1 - Specifying listeners with <tt>testng.xml</tt> or in Java</a></h3>

Here is how you can define listeners in your <tt>testng.xml</tt> file:

<div id="highlighter_720218" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_720218_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_720218" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">listeners</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">listener</code> <code class="color1">class-name</code><code class="plain">=</code><code class="string">"com.example.MyListener"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">listener</code> <code class="color1">class-name</code><code class="plain">=</code><code class="string">"com.example.MyMethodInterceptor"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">listeners</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">...</code></td></tr></tbody></table></div></div></div>

Or if you prefer to define these listeners in Java:

<div id="highlighter_199651" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_199651_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_199651" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Listeners</code><code class="plain">({ com.example.MyListener.</code><code class="keyword">class</code><code class="plain">, com.example.MyMethodInterceptor.</code><code class="keyword">class</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MyTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="comments">// ...</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

The <tt>@Listeners</tt> annotation can contain any class that extends <tt>org.testng.ITestNGListener</tt> <b>except</b> <tt>IAnnotationTransformer</tt> and <tt>IAnnotationTransformer2</tt>.  The reason is that these listeners need to be known very early in the process so that TestNG can use them to rewrite your annotations, therefore you need to specify these listeners in your <tt>testng.xml</tt> file.

<p>

Note that the <tt>@Listeners</tt> annotation will apply to your entire suite file, just as if you had specified it in a <tt>testng.xml</tt> file. If you want to restrict its scope (for example, only running on the current class), the code in your listener could first check the test method that's about to run and decide what to do then.

</p><h3><a class="section" indent="..." name="listeners-service-loader">5.17.2 - Specifying listeners with <tt>ServiceLoader</tt></a></h3>

Finally, the JDK offers a very elegant mechanism to specify implementations of interfaces on the class path via the <tt><a href="http://download.oracle.com/javase/6/docs/api/java/util/ServiceLoader.html">ServiceLoader</a></tt> class.

<p>
With ServiceLoader, all you need to do is create a jar file that contains your listener(s) and a few configuration files, put that jar file on the classpath when you run TestNG and TestNG will automatically find them.
</p><p>

Here is a concrete example of how it works.

</p><p>

Let's start by creating a listener (any TestNG listener should work):

</p><div id="highlighter_774452" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_774452_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_774452" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">package</code> <code class="plain">test.tmp;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">TmpSuiteListener </code><code class="keyword">implements</code> <code class="plain">ISuiteListener {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onFinish(ISuite suite) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Finishing"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onStart(ISuite suite) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Starting"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

Compile this file, then create a file at the location <tt>META-INF/services/org.testng.ITestNGListener</tt>, which will name the implementation(s) you want for this interface.

<p>

You should end up with the following directory structure, with only two files:

</p><div id="highlighter_592095" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_592095_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_592095" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">$ tree</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">|____META-INF</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">| |____services</code></td></tr></tbody></table></div><div class="line alt2 highlighted"><table><tbody><tr><td class="content"><code class="plain">| | |____org.testng.ITestNGListener</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">|____test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">| |____tmp</code></td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="content"><code class="plain">| | |____TmpSuiteListener.class</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">$ cat META-INF/services/org.testng.ITestNGListener</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">test.tmp.TmpSuiteListener</code></td></tr></tbody></table></div></div></div>

Create a jar of this directory:

<div id="highlighter_220845" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_220845_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_220845" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">$ jar cvf ../sl.jar .</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">added manifest</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">ignoring entry META-INF/</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">adding: META-INF/services/(in = 0) (out= 0)(stored 0%)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">adding: META-INF/services/org.testng.ITestNGListener(in = 26) (out= 28)(deflated -7%)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">adding: test/(in = 0) (out= 0)(stored 0%)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">adding: test/tmp/(in = 0) (out= 0)(stored 0%)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">adding: test/tmp/TmpSuiteListener.class(in = 849) (out= 470)(deflated 44%)</code></td></tr></tbody></table></div></div></div>

Next, put this jar file on your classpath when you invoke TestNG:

<div id="highlighter_94757" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_94757_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_94757" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">$ java -classpath sl.jar:testng.jar org.testng.TestNG testng-single.yaml</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">Starting</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">f2 11 2</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">PASSED: f2("2")</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">Finishing</code></td></tr></tbody></table></div></div></div>

This mechanism allows you to apply the same set of listeners to an entire organization just be adding a jar file to the classpath, instead of asking every single developer to remember to specify these listeners in their testng.xml file. 

<!-------------------------------------
  DEPENDENCY INJECTION
 ------------------------------------>
	
<h4>
<a class="section" indent=".." name="dependency-injection">5.18 - Dependency injection</a>
</h4>

TestNG supports two different kinds of dependency injection: native (performed by TestNG itself) and external (performed by a dependency injection framework such as Guice).

<h5>
<a class="section" indent="..." name="native-dependency-injection">5.18.1 - Native dependency injection</a>
</h5>

TestNG lets you declare additional parameters in your methods.  When this happens, TestNG will automatically fill these parameters with the right value.  Dependency injection can be used in the following places:

<ul>
  
<li>
  Any @Before method or @Test method can declare a parameter of type <tt>ITestContext</tt>.
</li><li>
  Any @AfterMethod method can declare a parameter of type <tt>ITestResult</tt>, which will reflect the result of the test method that was just run.
</li><li>
  Any @Before and @After methods can declare a parameter of type <tt>XmlTest</tt>, which contain the current <tt>&lt;test&gt;</tt> tag.
</li><li>
  Any @BeforeMethod (and @AfterMethod) can declare a parameter of type
  <tt>java.lang.reflect.Method</tt>.  This parameter will receive the
  test method that will be called once this @BeforeMethod finishes (or
  after the method as run for @AfterMethod).
</li><li>
  Any @BeforeMethod can declare a parameter of type <tt>Object[]</tt>.  This parameter will receive the list of parameters that are about to be fed to the upcoming test method, which could be either injected by TestNG, such as <tt>java.lang.reflect.Method</tt> or come from a <tt>@DataProvider</tt>.
</li><li>
  Any @DataProvider can declare a parameter of type
  <tt>ITestContext</tt> or <tt>java.lang.reflect.Method</tt>.  The
  latter parameter will receive the test method that is about to be invoked.
</li></ul>

You can turn off injection with the <tt>@NoInjection</tt> annotation:

<div id="highlighter_488004" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_488004_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_488004" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">NoInjectionTest {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@DataProvider</code><code class="plain">(name = </code><code class="string">"provider"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">Object[][] provide() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="keyword">new</code> <code class="plain">Object[][] { { CC.</code><code class="keyword">class</code><code class="plain">.getMethod(</code><code class="string">"f"</code><code class="plain">) } };</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(dataProvider = </code><code class="string">"provider"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1 highlighted"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">withoutInjection(</code><code class="color1">@NoInjection</code> <code class="plain">Method m) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Assert.assertEquals(m.getName(), </code><code class="string">"f"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code><code class="plain">(dataProvider = </code><code class="string">"provider"</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">withInjection(Method m) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Assert.assertEquals(m.getName(), </code><code class="string">"withInjection"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

<h5>
<a class="section" indent="..." name="guice-dependency-injection">5.18.2 - Guice dependency injection</a>
</h5>

If you use Guice, TestNG gives you an easy way to inject your test objects with a Guice module:

<div id="highlighter_772393" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_772393_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_772393" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Guice</code><code class="plain">(modules = GuiceExampleModule.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">GuiceTest </code><code class="keyword">extends</code> <code class="plain">SimpleBaseTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Inject</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">ISingleton m_singleton;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">singletonShouldWork() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">m_singleton.doSomething();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

In this example, <tt>GuiceExampleModule</tt> is expected to bind the interface <tt>ISingleton</tt> to some concrete class:

<div id="highlighter_264518" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_264518_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_264518" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">GuiceExampleModule </code><code class="keyword">implements</code> <code class="plain">Module {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">configure(Binder binder) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">binder.bind(ISingleton.</code><code class="keyword">class</code><code class="plain">).to(ExampleSingleton.</code><code class="keyword">class</code><code class="plain">).in(Singleton.</code><code class="keyword">class</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

If you need more flexibility in specifying which modules should be used to instantiate your test classes, you can specify a module factory:

<div id="highlighter_540363" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_540363_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_540363" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Guice</code><code class="plain">(moduleFactory = ModuleFactory.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">GuiceModuleFactoryTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Inject</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">ISingleton m_singleton;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">singletonShouldWork() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">m_singleton.doSomething();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

The module factory needs to implement the interface <a href="http://testng.org/javadocs/org/testng/IModuleFactory.html">IModuleFactory</a>:

<div id="highlighter_493180" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_493180_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_493180" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">IModuleFactory {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="preprocessor">/**</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* @param context The current test context</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* @param testClass The test class</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">*</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* @return The Guice module that should be used to get an instance of this</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">* test class.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><code class="preprocessor">*/</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">Module createModule(ITestContext context, Class&lt;?&gt; testClass);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

Your factory will be passed an instance of the test context and the test class that TestNG needs to instantiate. Your <tt>createModule</tt> method should return a Guice Module that will know how to instantiate this test class. You can use the test context to find out more information about your environment, such as parameters specified in <tt>testng.xml</tt>, etc...



<!-------------------------------------
  INVOKED METHOD LISTENERS
 ------------------------------------>
	
<h4>
<a class="section" indent=".." name="invokedmethodlistener">5.19 - Listening to method invocations</a>
</h4>

The listener <tt><a href="http://testng.org/javadocs/org/testng/IInvokedMethodListener.html">IInvokedMethodListener</a></tt> allows you to be notified whenever TestNG is about to invoke a test (annotated with <tt>@Test</tt>) or configuration (annotated with any of the <tt>@Before</tt> or <tt>@After</tt> annotation) method.  You need to implement the following interface:

<div id="highlighter_651116" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_651116_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_651116" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">IInvokedMethodListener </code><code class="keyword">extends</code> <code class="plain">ITestNGListener {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">void</code> <code class="plain">beforeInvocation(IInvokedMethod method, ITestResult testResult);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">void</code> <code class="plain">afterInvocation(IInvokedMethod method, ITestResult testResult);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

and declare it as a listener, as explained in <a href="http://testng.org/doc/documentation-main.html#testng-listeners">the section about TestNG listeners</a>.

<p>


<!-------------------------------------
  IHOOKABLE AND ICONFIGURABLE
  ------------------------------------>

</p><h4>
<a class="section" indent=".." name="ihookable">5.20 - Overriding test methods</a></h4>


TestNG allows you to override and possibly skip the invocation of test methods. One example of where this is useful is if you need to your test methods with a specific security manager. You achieve this by providing a listener that implements <a href="http://testng.org/javadocs/org/testng/IHookable.html"><tt>IHookable</tt></a>.
<p>
Here is an example with JAAS:

</p><div id="highlighter_190731" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_190731_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_190731" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MyHook </code><code class="keyword">implements</code> <code class="plain">IHookable {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">run(</code><code class="keyword">final</code> <code class="plain">IHookCallBack icb, ITestResult testResult) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">// Preferably initialized in a @Configuration method</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">mySubject = authenticateWithJAAs();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Subject.doAs(mySubject, </code><code class="keyword">new</code> <code class="plain">PrivilegedExceptionAction() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">Object run() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">icb.callback(testResult);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

<!------------------------------------
  TEST SUCCESS
  ------------------------------------>

<h3>
<a class="section" indent="." name="test-results">6 - Test results</a>
</h3>


<h4>
<a class="section" indent=".." name="success-failure">6.1 - Success, failure and assert</a>
</h4>


<p>A test is considered successful if it completed without throwing any 
exception or if&nbsp; it threw an exception that was expected (see the 
documentation for the <tt>expectedExceptions</tt> attribute found on the <tt>@Test</tt> annotation).
</p>

<p>Your test methods will typically be made of calls that can throw an 
exception, or of various assertions (using the Java "assert" keyword).&nbsp; An 
"assert" failing will trigger an AssertionErrorException, which in turn will 
mark the method as failed (remember to use -ea on the JVM if you are not seeing 
the assertion errors).</p><p>Here is an example test method:</p>

<div id="highlighter_573559" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_573559_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_573559" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">verifyLastName() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">assert</code> <code class="string">"Beust"</code><code class="plain">.equals(m_lastName) : </code><code class="string">"Expected name Beust, for"</code> <code class="plain">+ m_lastName;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>

TestNG also include JUnit's Assert class, which lets you perform 
assertions on complex objects:

<div id="highlighter_496256" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_496256_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_496256" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.testng.AssertJUnit.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">//...</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">verify() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">assertEquals(</code><code class="string">"Beust"</code><code class="plain">, m_lastName);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div>
<p>Note that the above code use a static import in order to be able to use the
<tt>assertEquals</tt> method without having to prefix it by its class.

<!-------------------------------------
  LOGGING
  ------------------------------------>
</p>

<h3><a class="section" indent=".." name="logging">6.2 - Logging and results</a>

</h3>The results of the test run are created in a file called <tt>index.html</tt> in the 
directory specified when launching SuiteRunner.&nbsp; This file points to 
various other HTML and text files that contain the result of the entire test 
run.&nbsp; You can see a typical example
<a href="http://testng.org/test-output/index.html">here</a>.

<p>
It's very easy to generate your own reports with TestNG with Listeners and Reporters:

</p><ul>
<li><b>Listeners</b> implement the interface <a href="http://testng.org/javadocs/org/testng/ITestListener.html"><tt>org.testng.ITestListener</tt></a> and are notified in real time of when a test starts, passes, fails, etc...</li><li><b>Reporters</b> implement the interface <a href="http://testng.org/javadocs/org/testng/IReporter.html"><tt>org.testng.IReporter</tt></a> and are notified when all the suites have been run by TestNG.  The IReporter instance receives a list of objects that describe the entire test run.</li></ul>For example, if you want to generate a PDF report of your test run, you don't need to be notified in real time of the test run so you should probably use an <tt>IReporter</tt>.  If you'd like to write a real-time reporting of your tests, such as a GUI with a progress bar or a text reporter displaying dots (".") as each test is invoked (as is explained below), <tt>ITestListener</tt> is your best choice.

<p>

<a class="section" indent="..." name="logging-listeners">6.2.1 - Logging Listeners</a>
</p><p>

Here is a listener that displays a "." for each passed test, a "F" for each failure and a "S" for each skip:

</p><div id="highlighter_773667" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_773667_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_773667" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">DotTestListener </code><code class="keyword">extends</code> <code class="plain">TestListenerAdapter {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">int</code> <code class="plain">m_count = </code><code class="value">0</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onTestFailure(ITestResult tr) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">log(</code><code class="string">"F"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onTestSkipped(ITestResult tr) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">log(</code><code class="string">"S"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Override</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">onTestSuccess(ITestResult tr) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">log(</code><code class="string">"."</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">void</code> <code class="plain">log(String string) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.print(string);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">(++m_count % </code><code class="value">40</code> <code class="plain">== </code><code class="value">0</code><code class="plain">) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">""</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">} </code></td></tr></tbody></table></div></div></div>

In this example, I chose to extend <a href="http://testng.org/javadocs/org/testng/TestListenerAdapter.html"><tt>TestListenerAdapter</tt></a>, which implements <a href="http://testng.org/javadocs/org/testng/ITestListener.html"><tt>ITestListener</tt></a> with empty methods, so I don't have to override other methods from the interface that I have no interest in.  You can implement the interface directly if you prefer.

<p>
Here is how I invoke TestNG to use this new listener:

</p><h3 class="sourcetitle">Shell</h3>
<div id="highlighter_245638" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_245638_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_245638" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">java -classpath testng.jar;%CLASSPATH% org.testng.TestNG -listener org.testng.reporters.DotTestListener test\testng.xml</code></td></tr></tbody></table></div></div></div>

and the output:

<p>

</p><h3 class="sourcetitle">Shell</h3>
<div id="highlighter_164492" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_164492_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_164492" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">........................................</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">........................................</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">........................................</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">........................................</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">........................................</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">.........................</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">===============================================</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">TestNG JDK 1.5</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">Total tests run: 226, Failures: 0, Skips: 0</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">===============================================</code></td></tr></tbody></table></div></div></div>

Note that when you use <tt>-listener</tt>, TestNG will automatically determine the type of listener you want to use.

<p>

<a class="section" indent="..." name="logging-reporters">6.2.2 - Logging Reporters</a>

</p><p>

The <a href="http://testng.org/javadocs/org/testng/IReporter.html"><tt>org.testng.IReporter</tt></a> interface only has one method:

</p><div id="highlighter_883446" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_883446_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_883446" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">generateReport(List&lt;ISuite&gt; suites, String outputDirectory)</code></td></tr></tbody></table></div></div></div>

This method will be invoked by TestNG when all the suites have been run and you can inspect its parameters to access all the information on the run that was just completed.

<p>

<a class="section" indent="..." name="logging-junitreports">6.2.3 - JUnitReports</a>

</p><p>


TestNG contains a listener that takes the TestNG results 
and outputs an XML file that can then be fed to JUnitReport.  <a href="http://testng.org/test-report/junit-noframes.html">
Here</a> is an example, and the ant task to create this report:

</p><h3 class="sourcetitle">build.xml</h3>
<div id="highlighter_290788" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_290788_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_290788" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">target</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"reports"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">junitreport</code> <code class="color1">todir</code><code class="plain">=</code><code class="string">"test-report"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">fileset</code> <code class="color1">dir</code><code class="plain">=</code><code class="string">"test-output"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"*/*.xml"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">fileset</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">report</code> <code class="color1">format</code><code class="plain">=</code><code class="string">"noframes"</code>&nbsp; <code class="color1">todir</code><code class="plain">=</code><code class="string">"test-report"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">junitreport</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">target</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>
<blockquote>
	<em>Note:&nbsp; a current incompatibility between the JDK 1.5 and JUnitReports 
prevents the frame version from working, so you need to specify "noframes" to 
get this to work for now.</em>
	</blockquote>

<a class="section" indent="..." name="logging-reporter-api">6.2.4 - Reporter API</a>

<p>
If you need to log messages that should appear in the generated HTML reports, you can use the class <tt><a href="http://testng.org/javadocs/org/testng/Reporter.html">org.testng.Reporter</a></tt>:

</p><blockquote class="brush: text">
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Reporter.log</font><font color="#000000">(</font><font color="#2a00ff">"M3 WAS CALLED"</font><font color="#000000">)</font><font color="#000000">;</font>

</blockquote>

<p align="center">

<img src="./TestNG_files/show-output1.png">
<img src="./TestNG_files/show-output2.png">

</p>

<a class="section" indent="..." name="logging-xml-reports">6.2.5 - XML Reports</a>
<p>
TestNG offers an XML reporter capturing TestNG specific information that is not available in JUnit reports. This is particulary useful when the user's test environment needs to consume XML results with TestNG-specific data that the JUnit format can't provide.  Below is a sample of the output of such a reporter:
</p>

<div id="highlighter_357535" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_357535_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_357535" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">testng-results</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Suite1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">group</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"group1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">method</code> <code class="color1">signature</code><code class="plain">=</code><code class="string">"com.test.TestOne.test2()"</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test2"</code> <code class="color1">class</code><code class="plain">=</code><code class="string">"com.test.TestOne"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">method</code> <code class="color1">signature</code><code class="plain">=</code><code class="string">"com.test.TestOne.test1()"</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test1"</code> <code class="color1">class</code><code class="plain">=</code><code class="string">"com.test.TestOne"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">group</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">group</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"group2"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">method</code> <code class="color1">signature</code><code class="plain">=</code><code class="string">"com.test.TestOne.test2()"</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test2"</code> <code class="color1">class</code><code class="plain">=</code><code class="string">"com.test.TestOne"</code><code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">group</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test1"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"com.test.TestOne"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test-method</code> <code class="color1">status</code><code class="plain">=</code><code class="string">"FAIL"</code> <code class="color1">signature</code><code class="plain">=</code><code class="string">"test1()"</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test1"</code> <code class="color1">duration-ms</code><code class="plain">=</code><code class="string">"0"</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">started-at</code><code class="plain">=</code><code class="string">"2007-05-28T12:14:37Z"</code> <code class="color1">description</code><code class="plain">=</code><code class="string">"someDescription2"</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">finished-at</code><code class="plain">=</code><code class="string">"2007-05-28T12:14:37Z"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">exception</code> <code class="color1">class</code><code class="plain">=</code><code class="string">"java.lang.AssertionError"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">short-stacktrace</code><code class="plain">&gt;java.lang.AssertionError</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">... Removed 22 stack frames</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">short-stacktrace</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">exception</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">test-method</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test-method</code> <code class="color1">status</code><code class="plain">=</code><code class="string">"PASS"</code> <code class="color1">signature</code><code class="plain">=</code><code class="string">"test2()"</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test2"</code> <code class="color1">duration-ms</code><code class="plain">=</code><code class="string">"0"</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">started-at</code><code class="plain">=</code><code class="string">"2007-05-28T12:14:37Z"</code> <code class="color1">description</code><code class="plain">=</code><code class="string">"someDescription1"</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">finished-at</code><code class="plain">=</code><code class="string">"2007-05-28T12:14:37Z"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">test-method</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test-method</code> <code class="color1">status</code><code class="plain">=</code><code class="string">"PASS"</code> <code class="color1">signature</code><code class="plain">=</code><code class="string">"setUp()"</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"setUp"</code> <code class="color1">is-config</code><code class="plain">=</code><code class="string">"true"</code> <code class="color1">duration-ms</code><code class="plain">=</code><code class="string">"15"</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">started-at</code><code class="plain">=</code><code class="string">"2007-05-28T12:14:37Z"</code> <code class="color1">finished-at</code><code class="plain">=</code><code class="string">"2007-05-28T12:14:37Z"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">test-method</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">class</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">suite</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">testng-results</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>
<p>This reporter is injected along with the other default listeners so you can get this type of output by default. The listener provides some properties that can tweak the reporter to fit your needs. The following table contains a list of these properties with a short explanation:
</p>
<table border="1" width="100%" id="table6">
  <tbody><tr>
    <th>Property</th>
    <th>Comment</th>
    <th>Default value</th>
  </tr>
  <tr>
    <td>outputDirectory</td>
    <td>A <tt>String</tt> indicating the directory where should the XML files be outputed.</td>
    <td>The TestNG output directory</td>
  </tr>
  <tr>
    <td>timestampFormat</td>
    <td>Specifies the format of date fields that are generated by this reporter</td>
    <td>yyyy-MM-dd'T'HH:mm:ss'Z'</td>
  </tr>
  <tr>
    <td>fileFragmentationLevel</td>
    <td>An integer having the values 1, 2 or 3, indicating the way that the XML files are generated:
      <br>
<pre>   1 - will generate all the results in one file.
   2 - each suite is generated in a separate XML file that is linked to the main file.
   3 - same as 2 plus separate files for test-cases that are referenced from the suite files.
</pre>
    </td>
    <td>1</td>
  </tr>
  <tr>
    <td>splitClassAndPackageNames</td>
    <td>This boolean specifies the way that class names are generated for the <tt>&lt;class&gt;</tt> element.
      For example, you will get <tt>&lt;class class="com.test.MyTest"&gt;</tt> for false and <tt>&lt;class class="MyTest" package="com.test"&gt;</tt> for true.
    </td>
    <td>false</td>
  </tr>
  <tr>
    <td>generateGroupsAttribute</td>
    <td>A boolean indicating if a <tt>groups</tt> attribute should be generated for the <tt>&lt;test-method&gt;</tt> element. This feature aims at providing a
      straight-forward method of retrieving the groups that include a test method without having to surf through the <tt>&lt;group&gt;</tt> elements.
    </td>
    <td>false</td>
  </tr>
  <tr>
    <td>generateTestResultAttributes</td>
    <td>
      A boolean indicating if an <tt>&lt;attributes&gt;</tt> tag should be generated for each <tt>&lt;test-method&gt;</tt> element, containing the test result
      attributes (See <tt>ITestResult.setAttribute()</tt> about setting test result attributes). Each attribute <tt>toString()</tt> representation will be
      written in a <tt>&lt;attribute name="[attribute name]"&gt;</tt> tag.
    </td>
    <td>false</td>
  </tr>
  <tr>
    <td>stackTraceOutputMethod</td>
    <td>Specifies the type of stack trace that is to be generated for exceptions and has the following values:
         <br>
<pre>   0 - no stacktrace (just Exception class and message).
   1 - a short version of the stack trace keeping just a few lines from the top
   2 - the complete stacktrace with all the inner exceptions
   3 - both short and long stacktrace
</pre>
    </td>
    <td>2</td>
  </tr>
  <tr>
    <td>generateDependsOnMethods</td>
    <td>Use this attribute to enable/disable the generation of a <tt>depends-on-methods</tt> attribute for the <tt>&lt;test-method&gt;</tt> element.
    </td>
    <td>true</td>
  </tr>
  <tr>
    <td>generateDependsOnGroups</td>
    <td>Enable/disable the generation of a <tt>depends-on-groups</tt> attribute for the <tt>&lt;test-method&gt;</tt> element.
    </td>
    <td>true</td>
  </tr>
</tbody></table>
<p>
  In order to configure this reporter you can use the <tt>-reporter</tt> option in the command line or the <a href="http://testng.org/doc/ant.html">Ant</a>
  task with the nested <tt>&lt;reporter&gt;</tt> element. For each of these you must specify the class <tt>org.testng.reporters.XMLReporter</tt>.
  Please note that you cannot configure the built-in reporter because this one will only use default settings. If you need just the XML report with custom settings
  you will have to add it manually with one of the two methods and disable the default listeners.
</p>

<!------------------------------------
  YAML
  ------------------------------------>

<h3>
<a class="section" name="yaml">7 - YAML</a>
</h3>

TestNG supports <a href="http://www.yaml.org/">YAML</a> as an alternate way of specifying your suite file. For example, the following XML file:

<div id="highlighter_976912" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_976912_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_976912" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">&lt;</code><code class="keyword">suite</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"SingleSuite"</code> <code class="color1">verbose</code><code class="plain">=</code><code class="string">"2"</code> <code class="color1">thread-count</code><code class="plain">=</code><code class="string">"4"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">parameter</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"n"</code> <code class="color1">value</code><code class="plain">=</code><code class="string">"42"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"Regression2"</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">exclude</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"broken"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">run</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">groups</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;</code><code class="keyword">class</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test.listeners.ResultEndMillisTest"</code> <code class="plain">/&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">classes</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">&lt;/</code><code class="keyword">test</code><code class="plain">&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">&lt;/</code><code class="keyword">suite</code><code class="plain">&gt;</code></td></tr></tbody></table></div></div></div>
<p>and here is its YAML version:</p>
<div id="highlighter_583005" class="syntaxhighlighter nogutter  "><div class="bar"><div class="toolbar"><a href="http://testng.org/doc/documentation-main.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_583005_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_583005" menu="false" src="scripts/clipboard.swf"></div><a href="http://testng.org/doc/documentation-main.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="http://testng.org/doc/documentation-main.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">name: SingleSuite</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">threadCount: 4</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">parameters: { n: 42 }</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">tests:</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">- name: Regression2</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">parameters: { count: 10 }</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">excludedGroups: [ broken ]</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">classes:</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">- test.listeners.ResultEndMillisTest</code></td></tr></tbody></table></div></div></div>

Here is <a href="https://github.com/cbeust/testng/blob/master/src/test/resources/testng.xml">TestNG's own suite file</a>, and its <a href="https://github.com/cbeust/testng/blob/master/src/test/resources/testng.yaml">YAML counterpart</a>.

<p>

You might find the YAML file format easier to read and to maintain. YAML files are also recognized by the TestNG Eclipse plug-in. You can find more information about YAML and TestNG in this <a href="http://beust.com/weblog/2010/08/15/yaml-the-forgotten-victim-of-the-format-wars/">blog post</a>.


<!---------------------------------------------------------------------->

<a name="testng-dtd">
&nbsp;</a></p><hr width="100%"><a name="testng-dtd">
</a><p><a name="testng-dtd">Back to my </a><a href="http://beust.com/weblog">home page</a>.</p><p>Or check out some of my other projects:</p><ul>
	<li><a href="http://beust.com/ejbgen">EJBGen</a>:&nbsp; an EJB tag 
	generator.</li><li><a href="http://testng.org/">TestNG</a>:&nbsp; A testing framework using annotations, test groups and method parameters. </li><li><a href="http://beust.com/doclipse">Doclipse</a>:&nbsp; a JavaDoc tag 
	Eclipse plug-in.</li><li><a href="http://beust.com/j15">J15</a>:&nbsp; an Eclipse plug-in to help 
	you migrate your code to the new JDK 1.5 constructs..</li><li><a href="http://beust.com/sgen">SGen</a>:&nbsp; a replacement for 
	XDoclet with an easy plug-in architecture.</li><li><a href="http://beust.com/canvas">Canvas</a>:&nbsp; a template generator 
	based on the Groovy language.</li></ul><p>
</p>

<script src="./TestNG_files/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-238215-2";
urchinTracker();
</script>
	
</body></html>